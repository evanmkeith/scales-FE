{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n/* eslint-disable camelcase */\n\n\nimport * as React from 'react';\nimport memoize from 'memoize-one';\nimport Actions from './components/Actions';\nimport Content from './components/Content';\nimport Controls from './components/Controls';\nimport ErrorMessage from './components/ErrorMessage';\nimport Info from './components/Info';\nimport Loader from './components/Loader';\nimport Player from './components/Player';\nimport Slider from './components/Slider';\nimport { getDevices, getPlaybackState, next, pause, play, previous, seek, setDevice, setVolume } from './spotify';\nimport { getMergedStyles } from './styles';\nimport { getLocale, getSpotifyURIType, isEqualArray, loadSpotifyPlayer, parseVolume, round, STATUS, TYPE, validateURI } from './utils';\n\nvar SpotifyWebPlayer =\n/** @class */\nfunction (_super) {\n  __extends(SpotifyWebPlayer, _super);\n\n  function SpotifyWebPlayer(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.isActive = false;\n    _this.emptyTrack = {\n      artists: [],\n      durationMs: 0,\n      id: '',\n      image: '',\n      name: '',\n      uri: ''\n    };\n    _this.getPlayOptions = memoize(function (data) {\n      var playOptions = {\n        context_uri: undefined,\n        uris: undefined\n      };\n      /* istanbul ignore else */\n\n      if (data) {\n        var ids = Array.isArray(data) ? data : [data];\n\n        if (!ids.every(function (d) {\n          return validateURI(d);\n        })) {\n          // eslint-disable-next-line no-console\n          console.error('Invalid URI');\n          return playOptions;\n        }\n\n        if (ids.some(function (d) {\n          return getSpotifyURIType(d) === 'track';\n        })) {\n          if (!ids.every(function (d) {\n            return getSpotifyURIType(d) === 'track';\n          })) {\n            // eslint-disable-next-line no-console\n            console.warn(\"You can't mix tracks URIs with other types\");\n          }\n\n          playOptions.uris = ids.filter(function (d) {\n            return validateURI(d) && getSpotifyURIType(d) === 'track';\n          });\n        } else {\n          if (ids.length > 1) {\n            // eslint-disable-next-line no-console\n            console.warn(\"Albums, Artists, Playlists and Podcasts can't have multiple URIs\");\n          } // eslint-disable-next-line prefer-destructuring\n\n\n          playOptions.context_uri = ids[0];\n        }\n      }\n\n      return playOptions;\n    });\n    _this.hasNewToken = false;\n    _this.ref = React.createRef();\n    _this.seekUpdateInterval = 100;\n\n    _this.handleChangeRange = function (position) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var track, _a, callback, token, progress, percentage, state, error_1;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              track = this.state.track;\n              _a = this.props, callback = _a.callback, token = _a.token;\n              progress = 0;\n              _b.label = 1;\n\n            case 1:\n              _b.trys.push([1, 8,, 9]);\n\n              percentage = position / 100;\n              if (!this.isExternalPlayer) return [3\n              /*break*/\n              , 3];\n              progress = Math.round(track.durationMs * percentage);\n              return [4\n              /*yield*/\n              , seek(token, progress)];\n\n            case 2:\n              _b.sent();\n\n              this.updateState({\n                position: position,\n                progressMs: progress\n              });\n              return [3\n              /*break*/\n              , 7];\n\n            case 3:\n              if (!this.player) return [3\n              /*break*/\n              , 7];\n              return [4\n              /*yield*/\n              , this.player.getCurrentState()];\n\n            case 4:\n              state = _b.sent();\n              if (!state) return [3\n              /*break*/\n              , 6];\n              progress = Math.round(state.track_window.current_track.duration_ms * percentage);\n              return [4\n              /*yield*/\n              , this.player.seek(progress)];\n\n            case 5:\n              _b.sent();\n\n              this.updateState({\n                position: position,\n                progressMs: progress\n              });\n              return [3\n              /*break*/\n              , 7];\n\n            case 6:\n              this.updateState({\n                position: 0\n              });\n              _b.label = 7;\n\n            case 7:\n              if (callback) {\n                callback(__assign(__assign({}, this.state), {\n                  type: TYPE.PROGRESS\n                }));\n              }\n\n              return [3\n              /*break*/\n              , 9];\n\n            case 8:\n              error_1 = _b.sent(); // eslint-disable-next-line no-console\n\n              console.error(error_1);\n              return [3\n              /*break*/\n              , 9];\n\n            case 9:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.handleClickTogglePlay = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var isActive, error_2;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              isActive = this.state.isActive;\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , this.togglePlay(!this.isExternalPlayer && !isActive)];\n\n            case 2:\n              _a.sent();\n\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              error_2 = _a.sent(); // eslint-disable-next-line no-console\n\n              console.error(error_2);\n              return [3\n              /*break*/\n              , 4];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.handleClickPrevious = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var token, error_3;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 5,, 6]);\n\n              if (!this.isExternalPlayer) return [3\n              /*break*/\n              , 2];\n              token = this.props.token;\n              return [4\n              /*yield*/\n              , previous(token)];\n\n            case 1:\n              _a.sent();\n\n              this.syncTimeout = window.setTimeout(function () {\n                _this.syncDevice();\n              }, 300);\n              return [3\n              /*break*/\n              , 4];\n\n            case 2:\n              if (!this.player) return [3\n              /*break*/\n              , 4];\n              return [4\n              /*yield*/\n              , this.player.previousTrack()];\n\n            case 3:\n              _a.sent();\n\n              _a.label = 4;\n\n            case 4:\n              return [3\n              /*break*/\n              , 6];\n\n            case 5:\n              error_3 = _a.sent(); // eslint-disable-next-line no-console\n\n              console.error(error_3);\n              return [3\n              /*break*/\n              , 6];\n\n            case 6:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.handleClickNext = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var token, error_4;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 5,, 6]);\n\n              if (!this.isExternalPlayer) return [3\n              /*break*/\n              , 2];\n              token = this.props.token;\n              return [4\n              /*yield*/\n              , next(token)];\n\n            case 1:\n              _a.sent();\n\n              this.syncTimeout = window.setTimeout(function () {\n                _this.syncDevice();\n              }, 300);\n              return [3\n              /*break*/\n              , 4];\n\n            case 2:\n              if (!this.player) return [3\n              /*break*/\n              , 4];\n              return [4\n              /*yield*/\n              , this.player.nextTrack()];\n\n            case 3:\n              _a.sent();\n\n              _a.label = 4;\n\n            case 4:\n              return [3\n              /*break*/\n              , 6];\n\n            case 5:\n              error_4 = _a.sent(); // eslint-disable-next-line no-console\n\n              console.error(error_4);\n              return [3\n              /*break*/\n              , 6];\n\n            case 6:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.handleClickDevice = function (deviceId) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var isUnsupported, _a, autoPlay, persistDeviceSelection, token, player, error_5;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              isUnsupported = this.state.isUnsupported;\n              _a = this.props, autoPlay = _a.autoPlay, persistDeviceSelection = _a.persistDeviceSelection, token = _a.token;\n              this.updateState({\n                currentDeviceId: deviceId\n              });\n              _b.label = 1;\n\n            case 1:\n              _b.trys.push([1, 7,, 8]);\n\n              return [4\n              /*yield*/\n              , setDevice(token, deviceId)];\n\n            case 2:\n              _b.sent();\n              /* istanbul ignore else */\n\n\n              if (persistDeviceSelection) {\n                sessionStorage.setItem('rswpDeviceId', deviceId);\n              }\n\n              if (!isUnsupported) return [3\n              /*break*/\n              , 6];\n              return [4\n              /*yield*/\n              , this.syncDevice()];\n\n            case 3:\n              _b.sent();\n\n              return [4\n              /*yield*/\n              , getPlaybackState(token)];\n\n            case 4:\n              player = _b.sent();\n              if (!(player && !player.is_playing && autoPlay)) return [3\n              /*break*/\n              , 6];\n              return [4\n              /*yield*/\n              , this.togglePlay(true)];\n\n            case 5:\n              _b.sent();\n\n              _b.label = 6;\n\n            case 6:\n              return [3\n              /*break*/\n              , 8];\n\n            case 7:\n              error_5 = _b.sent(); // eslint-disable-next-line no-console\n\n              console.error(error_5);\n              return [3\n              /*break*/\n              , 8];\n\n            case 8:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.handleFavoriteStatusChange = function (status) {\n      var isSaved = _this.state.isSaved;\n      var callback = _this.props.callback;\n\n      _this.updateState({\n        isSaved: status\n      });\n      /* istanbul ignore else */\n\n\n      if (isSaved !== status) {\n        callback(__assign(__assign({}, _this.state), {\n          isSaved: status,\n          type: TYPE.FAVORITE\n        }));\n      }\n    };\n\n    _this.handlePlayerErrors = function (type, message) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var status, isPlaybackError, isInitializationError, nextStatus, devices, token;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              status = this.state.status;\n              isPlaybackError = type === 'playback_error';\n              isInitializationError = type === 'initialization_error';\n              nextStatus = status;\n              devices = [];\n              if (!(this.player && !isPlaybackError)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , this.player.disconnect()];\n\n            case 1:\n              _b.sent();\n\n              _b.label = 2;\n\n            case 2:\n              if (!isInitializationError) return [3\n              /*break*/\n              , 4];\n              nextStatus = STATUS.UNSUPPORTED;\n              token = this.props.token;\n              return [4\n              /*yield*/\n              , getDevices(token)];\n\n            case 3:\n              _a = _b.sent().devices, devices = _a === void 0 ? [] : _a;\n              _b.label = 4;\n\n            case 4:\n              if (!isInitializationError && !isPlaybackError) {\n                nextStatus = STATUS.ERROR;\n              }\n\n              this.updateState({\n                devices: devices,\n                error: message,\n                errorType: type,\n                isInitializing: false,\n                isUnsupported: isInitializationError,\n                status: nextStatus\n              });\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.handlePlayerStateChanges = function (state) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var paused, position, _a, _b, album, artists, duration_ms, id, name_1, uri, next_tracks, previous_tracks, isPlaying, volume, track, trackState, error_6;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _c.trys.push([0, 6,, 7]);\n\n              if (!state) return [3\n              /*break*/\n              , 2];\n              paused = state.paused, position = state.position, _a = state.track_window, _b = _a.current_track, album = _b.album, artists = _b.artists, duration_ms = _b.duration_ms, id = _b.id, name_1 = _b.name, uri = _b.uri, next_tracks = _a.next_tracks, previous_tracks = _a.previous_tracks;\n              isPlaying = !paused;\n              return [4\n              /*yield*/\n              , this.player.getVolume()];\n\n            case 1:\n              volume = _c.sent();\n              track = {\n                artists: artists,\n                durationMs: duration_ms,\n                id: id,\n                image: this.setAlbumImage(album),\n                name: name_1,\n                uri: uri\n              };\n              trackState = void 0;\n\n              if (position === 0) {\n                trackState = {\n                  nextTracks: next_tracks,\n                  position: 0,\n                  previousTracks: previous_tracks,\n                  track: track\n                };\n              }\n\n              this.updateState(__assign({\n                error: '',\n                errorType: '',\n                isActive: true,\n                isPlaying: isPlaying,\n                progressMs: position,\n                volume: round(volume)\n              }, trackState));\n              return [3\n              /*break*/\n              , 5];\n\n            case 2:\n              if (!this.isExternalPlayer) return [3\n              /*break*/\n              , 4];\n              return [4\n              /*yield*/\n              , this.syncDevice()];\n\n            case 3:\n              _c.sent();\n\n              return [3\n              /*break*/\n              , 5];\n\n            case 4:\n              this.updateState({\n                isActive: false,\n                isPlaying: false,\n                nextTracks: [],\n                position: 0,\n                previousTracks: [],\n                track: {\n                  artists: '',\n                  durationMs: 0,\n                  id: '',\n                  image: '',\n                  name: '',\n                  uri: ''\n                }\n              });\n              _c.label = 5;\n\n            case 5:\n              return [3\n              /*break*/\n              , 7];\n\n            case 6:\n              error_6 = _c.sent(); // eslint-disable-next-line no-console\n\n              console.error(error_6);\n              return [3\n              /*break*/\n              , 7];\n\n            case 7:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.handlePlayerStatus = function (_a) {\n      var device_id = _a.device_id;\n      return __awaiter(_this, void 0, void 0, function () {\n        var _b, currentDeviceId, devices;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.initializeDevices(device_id)];\n\n            case 1:\n              _b = _c.sent(), currentDeviceId = _b.currentDeviceId, devices = _b.devices;\n              this.updateState({\n                currentDeviceId: currentDeviceId,\n                deviceId: device_id,\n                devices: devices,\n                isInitializing: false,\n                status: device_id ? STATUS.READY : STATUS.IDLE\n              });\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.handleToggleMagnify = function () {\n      var magnifySliderOnHover = _this.props.magnifySliderOnHover;\n\n      if (magnifySliderOnHover) {\n        _this.updateState(function (previousState) {\n          return {\n            isMagnified: !previousState.isMagnified\n          };\n        });\n      }\n    };\n\n    _this.initializePlayer = function () {\n      var volume = _this.state.volume;\n      var _a = _this.props,\n          name = _a.name,\n          token = _a.token;\n\n      _this.updateState({\n        isInitializing: true\n      }); // @ts-ignore\n\n\n      _this.player = new window.Spotify.Player({\n        getOAuthToken: function getOAuthToken(callback) {\n          callback(token);\n        },\n        name: name,\n        volume: volume\n      });\n\n      _this.player.addListener('ready', _this.handlePlayerStatus);\n\n      _this.player.addListener('not_ready', _this.handlePlayerStatus);\n\n      _this.player.addListener('player_state_changed', _this.handlePlayerStateChanges);\n\n      _this.player.addListener('initialization_error', function (error) {\n        return _this.handlePlayerErrors('initialization_error', error.message);\n      });\n\n      _this.player.addListener('authentication_error', function (error) {\n        return _this.handlePlayerErrors('authentication_error', error.message);\n      });\n\n      _this.player.addListener('account_error', function (error) {\n        return _this.handlePlayerErrors('account_error', error.message);\n      });\n\n      _this.player.addListener('playback_error', function (error) {\n        return _this.handlePlayerErrors('playback_error', error.message);\n      });\n\n      _this.player.connect();\n    }; // eslint-disable-next-line class-methods-use-this\n\n\n    _this.setAlbumImage = function (album) {\n      var width = Math.min.apply(Math, __spreadArray([], __read(album.images.map(function (d) {\n        return d.width;\n      })), false));\n      var thumb = album.images.find(function (d) {\n        return d.width === width;\n      }) || {};\n      return thumb.url;\n    };\n\n    _this.setExternalDevice = function (id) {\n      _this.updateState({\n        currentDeviceId: id,\n        isPlaying: true\n      });\n    };\n\n    _this.setVolume = function (volume) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var token;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              token = this.props.token;\n              if (!this.isExternalPlayer) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , setVolume(token, Math.round(volume * 100))];\n\n            case 1:\n              _a.sent();\n\n              return [4\n              /*yield*/\n              , this.syncDevice()];\n\n            case 2:\n              _a.sent();\n\n              return [3\n              /*break*/\n              , 5];\n\n            case 3:\n              if (!this.player) return [3\n              /*break*/\n              , 5];\n              return [4\n              /*yield*/\n              , this.player.setVolume(volume)];\n\n            case 4:\n              _a.sent();\n\n              _a.label = 5;\n\n            case 5:\n              this.updateState({\n                volume: volume\n              });\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.syncDevice = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var deviceId, token, player, track, error_7, state;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!this.isActive) {\n                return [2\n                /*return*/\n                ];\n              }\n\n              deviceId = this.state.deviceId;\n              token = this.props.token;\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , getPlaybackState(token)];\n\n            case 2:\n              player = _a.sent();\n              track = this.emptyTrack;\n\n              if (!player) {\n                throw new Error('No player');\n              }\n              /* istanbul ignore else */\n\n\n              if (player.item) {\n                track = {\n                  artists: player.item.artists,\n                  durationMs: player.item.duration_ms,\n                  id: player.item.id,\n                  image: this.setAlbumImage(player.item.album),\n                  name: player.item.name,\n                  uri: player.item.uri\n                };\n              }\n\n              this.updateState({\n                error: '',\n                errorType: '',\n                isActive: true,\n                isPlaying: player.is_playing,\n                nextTracks: [],\n                previousTracks: [],\n                progressMs: player.item ? player.progress_ms : 0,\n                status: STATUS.READY,\n                track: track,\n                volume: parseVolume(player.device.volume_percent)\n              });\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              error_7 = _a.sent();\n              state = {\n                isActive: false,\n                isPlaying: false,\n                position: 0,\n                track: this.emptyTrack\n              };\n\n              if (deviceId) {\n                this.updateState(__assign({\n                  currentDeviceId: deviceId\n                }, state));\n                return [2\n                /*return*/\n                ];\n              }\n\n              this.updateState(__assign({\n                error: error_7.message,\n                errorType: 'player_status',\n                status: STATUS.ERROR\n              }, state));\n              return [3\n              /*break*/\n              , 4];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.toggleOffset = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, currentDeviceId, isPlaying, _b, offset, token, uris;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this.state, currentDeviceId = _a.currentDeviceId, isPlaying = _a.isPlaying;\n              _b = this.props, offset = _b.offset, token = _b.token, uris = _b.uris;\n              if (!(isPlaying && typeof offset === 'number' && Array.isArray(uris))) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , play(token, {\n                deviceId: currentDeviceId,\n                offset: offset,\n                uris: uris\n              })];\n\n            case 1:\n              _c.sent();\n\n              _c.label = 2;\n\n            case 2:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.togglePlay = function (init) {\n      if (init === void 0) {\n        init = false;\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, currentDeviceId, isPlaying, needsUpdate, _b, offset, token, uris, shouldInitialize, playOptions, playerState, error_8;\n\n        var _this = this;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this.state, currentDeviceId = _a.currentDeviceId, isPlaying = _a.isPlaying, needsUpdate = _a.needsUpdate;\n              _b = this.props, offset = _b.offset, token = _b.token, uris = _b.uris;\n              shouldInitialize = init || needsUpdate;\n              playOptions = this.getPlayOptions(uris);\n              _c.label = 1;\n\n            case 1:\n              _c.trys.push([1, 12,, 13]);\n\n              if (!this.isExternalPlayer) return [3\n              /*break*/\n              , 6];\n              if (!!isPlaying) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , play(token, __assign({\n                deviceId: currentDeviceId,\n                offset: offset\n              }, shouldInitialize ? playOptions : undefined))];\n\n            case 2:\n              _c.sent();\n\n              return [3\n              /*break*/\n              , 5];\n\n            case 3:\n              return [4\n              /*yield*/\n              , pause(token)];\n\n            case 4:\n              _c.sent();\n\n              this.updateState({\n                isPlaying: false\n              });\n              _c.label = 5;\n\n            case 5:\n              this.syncTimeout = window.setTimeout(function () {\n                _this.syncDevice();\n              }, 300);\n              return [3\n              /*break*/\n              , 11];\n\n            case 6:\n              if (!this.player) return [3\n              /*break*/\n              , 11];\n              return [4\n              /*yield*/\n              , this.player.getCurrentState()];\n\n            case 7:\n              playerState = _c.sent();\n              this.player.activateElement();\n              if (!(!playerState && !!(playOptions.context_uri || playOptions.uris) || shouldInitialize && playerState && playerState.paused)) return [3\n              /*break*/\n              , 9];\n              return [4\n              /*yield*/\n              , play(token, __assign({\n                deviceId: currentDeviceId,\n                offset: offset\n              }, shouldInitialize ? playOptions : undefined))];\n\n            case 8:\n              _c.sent();\n\n              return [3\n              /*break*/\n              , 11];\n\n            case 9:\n              return [4\n              /*yield*/\n              , this.player.togglePlay()];\n\n            case 10:\n              _c.sent();\n\n              _c.label = 11;\n\n            case 11:\n              if (needsUpdate) {\n                this.updateState({\n                  needsUpdate: false\n                });\n              }\n\n              return [3\n              /*break*/\n              , 13];\n\n            case 12:\n              error_8 = _c.sent(); // eslint-disable-next-line no-console\n\n              console.error(error_8);\n              return [3\n              /*break*/\n              , 13];\n\n            case 13:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.updateSeekBar = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, progressMs, track, position, state, progress, position, error_9;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!this.isActive) {\n                return [2\n                /*return*/\n                ];\n              }\n\n              _a = this.state, progressMs = _a.progressMs, track = _a.track;\n              _b.label = 1;\n\n            case 1:\n              _b.trys.push([1, 5,, 6]);\n\n              if (!this.isExternalPlayer) return [3\n              /*break*/\n              , 2];\n              position = progressMs / track.durationMs;\n              position = Number(((Number.isFinite(position) ? position : 0) * 100).toFixed(1));\n              this.updateState({\n                position: position,\n                progressMs: progressMs + this.seekUpdateInterval\n              });\n              return [3\n              /*break*/\n              , 4];\n\n            case 2:\n              if (!this.player) return [3\n              /*break*/\n              , 4];\n              return [4\n              /*yield*/\n              , this.player.getCurrentState()];\n\n            case 3:\n              state = _b.sent();\n              /* istanbul ignore else */\n\n              if (state) {\n                progress = state.position;\n                position = Number((progress / state.track_window.current_track.duration_ms * 100).toFixed(1));\n                this.updateState({\n                  position: position,\n                  progressMs: progress + this.seekUpdateInterval\n                });\n              }\n\n              _b.label = 4;\n\n            case 4:\n              return [3\n              /*break*/\n              , 6];\n\n            case 5:\n              error_9 = _b.sent(); // eslint-disable-next-line no-console\n\n              console.error(error_9);\n              return [3\n              /*break*/\n              , 6];\n\n            case 6:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.updateState = function (state) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      if (!_this.isActive) {\n        return;\n      }\n\n      _this.setState(state);\n    };\n\n    _this.state = {\n      currentDeviceId: '',\n      deviceId: '',\n      devices: [],\n      error: '',\n      errorType: '',\n      isActive: false,\n      isInitializing: false,\n      isMagnified: false,\n      isPlaying: false,\n      isSaved: false,\n      isUnsupported: false,\n      needsUpdate: false,\n      nextTracks: [],\n      playerPosition: 'bottom',\n      position: 0,\n      previousTracks: [],\n      progressMs: 0,\n      status: STATUS.IDLE,\n      track: _this.emptyTrack,\n      volume: parseVolume(props.initialVolume) || 1\n    };\n    _this.styles = getMergedStyles(props.styles);\n    return _this;\n  }\n\n  SpotifyWebPlayer.prototype.componentDidMount = function () {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, top;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            this.isActive = true;\n            _b = (((_a = this.ref.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) || {}).top, top = _b === void 0 ? 0 : _b;\n            this.updateState({\n              playerPosition: top > window.innerHeight / 2 ? 'bottom' : 'top',\n              status: STATUS.INITIALIZING\n            });\n\n            if (!window.onSpotifyWebPlaybackSDKReady) {\n              window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n            } else {\n              this.initializePlayer();\n            }\n\n            return [4\n            /*yield*/\n            , loadSpotifyPlayer()];\n\n          case 1:\n            _c.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SpotifyWebPlayer.prototype.componentDidUpdate = function (previousProps, previousState) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, currentDeviceId, deviceId, error, isInitializing, isPlaying, status, track, _b, autoPlay, callback, offset, playProp, showSaveIcon, syncExternalDevice, token, uris, isReady, changedURIs, playOptions, canPlay, shouldPlay, player;\n\n      var _this = this;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this.state, currentDeviceId = _a.currentDeviceId, deviceId = _a.deviceId, error = _a.error, isInitializing = _a.isInitializing, isPlaying = _a.isPlaying, status = _a.status, track = _a.track;\n            _b = this.props, autoPlay = _b.autoPlay, callback = _b.callback, offset = _b.offset, playProp = _b.play, showSaveIcon = _b.showSaveIcon, syncExternalDevice = _b.syncExternalDevice, token = _b.token, uris = _b.uris;\n            isReady = previousState.status !== STATUS.READY && status === STATUS.READY;\n            changedURIs = Array.isArray(uris) ? !isEqualArray(previousProps.uris, uris) : previousProps.uris !== uris;\n            playOptions = this.getPlayOptions(uris);\n            canPlay = !!currentDeviceId && !!(playOptions.context_uri || playOptions.uris);\n            shouldPlay = changedURIs && isPlaying || !!(isReady && (autoPlay || playProp));\n            if (!(canPlay && shouldPlay)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , play(token, __assign({\n              deviceId: currentDeviceId,\n              offset: offset\n            }, playOptions))];\n\n          case 1:\n            _c.sent();\n            /* istanbul ignore else */\n\n\n            if (!isPlaying) {\n              this.updateState({\n                isPlaying: true\n              });\n            }\n\n            if (this.isExternalPlayer) {\n              this.syncTimeout = window.setTimeout(function () {\n                _this.syncDevice();\n              }, 600);\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            if (changedURIs && !isPlaying) {\n              this.updateState({\n                needsUpdate: true\n              });\n            }\n\n            _c.label = 3;\n\n          case 3:\n            if (previousState.status !== status) {\n              callback(__assign(__assign({}, this.state), {\n                type: TYPE.STATUS\n              }));\n            }\n\n            if (!(previousState.currentDeviceId !== currentDeviceId && currentDeviceId)) return [3\n            /*break*/\n            , 6];\n\n            if (!isReady) {\n              callback(__assign(__assign({}, this.state), {\n                type: TYPE.DEVICE\n              }));\n            }\n\n            return [4\n            /*yield*/\n            , this.toggleSyncInterval(this.isExternalPlayer)];\n\n          case 4:\n            _c.sent();\n\n            return [4\n            /*yield*/\n            , this.updateSeekBar()];\n\n          case 5:\n            _c.sent();\n\n            _c.label = 6;\n\n          case 6:\n            if (previousState.track.id !== track.id && track.id) {\n              callback(__assign(__assign({}, this.state), {\n                type: TYPE.TRACK\n              }));\n\n              if (showSaveIcon) {\n                this.updateState({\n                  isSaved: false\n                });\n              }\n            }\n\n            if (!(previousState.isPlaying !== isPlaying)) return [3\n            /*break*/\n            , 8];\n            this.toggleProgressBar();\n            return [4\n            /*yield*/\n            , this.toggleSyncInterval(this.isExternalPlayer)];\n\n          case 7:\n            _c.sent();\n\n            callback(__assign(__assign({}, this.state), {\n              type: TYPE.PLAYER\n            }));\n            _c.label = 8;\n\n          case 8:\n            if (token && previousProps.token !== token) {\n              this.hasNewToken = true;\n\n              if (!isInitializing) {\n                this.initializePlayer();\n              } else {\n                this.hasNewToken = true;\n              }\n            }\n\n            if (!(previousProps.play !== playProp && playProp !== isPlaying)) return [3\n            /*break*/\n            , 10];\n            return [4\n            /*yield*/\n            , this.togglePlay(!track.id)];\n\n          case 9:\n            _c.sent();\n\n            _c.label = 10;\n\n          case 10:\n            if (!(previousProps.offset !== offset)) return [3\n            /*break*/\n            , 12];\n            return [4\n            /*yield*/\n            , this.toggleOffset()];\n\n          case 11:\n            _c.sent();\n\n            _c.label = 12;\n\n          case 12:\n            if (!(previousState.isInitializing && !isInitializing)) return [3\n            /*break*/\n            , 14];\n\n            if (error === 'authentication_error' && this.hasNewToken) {\n              this.hasNewToken = false;\n              this.initializePlayer();\n            }\n\n            if (!(syncExternalDevice && !uris)) return [3\n            /*break*/\n            , 14];\n            return [4\n            /*yield*/\n            , getPlaybackState(token)];\n\n          case 13:\n            player = _c.sent();\n            /* istanbul ignore else */\n\n            if (player && player.is_playing && player.device.id !== deviceId) {\n              this.setExternalDevice(player.device.id);\n            }\n\n            _c.label = 14;\n\n          case 14:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SpotifyWebPlayer.prototype.componentWillUnmount = function () {\n    this.isActive = false;\n    /* istanbul ignore else */\n\n    if (this.player) {\n      this.player.disconnect();\n    }\n\n    clearInterval(this.playerSyncInterval);\n    clearInterval(this.playerProgressInterval);\n    clearTimeout(this.syncTimeout);\n  };\n\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"isExternalPlayer\", {\n    get: function get() {\n      var _a = this.state,\n          currentDeviceId = _a.currentDeviceId,\n          deviceId = _a.deviceId,\n          status = _a.status;\n      return currentDeviceId && currentDeviceId !== deviceId || status === STATUS.UNSUPPORTED;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SpotifyWebPlayer.prototype.initializeDevices = function (id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, persistDeviceSelection, token, devices, currentDeviceId, savedDeviceId_1;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.props, persistDeviceSelection = _a.persistDeviceSelection, token = _a.token;\n            return [4\n            /*yield*/\n            , getDevices(token)];\n\n          case 1:\n            devices = _b.sent().devices;\n            currentDeviceId = id;\n\n            if (persistDeviceSelection) {\n              savedDeviceId_1 = sessionStorage.getItem('rswpDeviceId');\n              /* istanbul ignore else */\n\n              if (!savedDeviceId_1 || !devices.some(function (d) {\n                return d.id === savedDeviceId_1;\n              })) {\n                sessionStorage.setItem('rswpDeviceId', currentDeviceId);\n              } else {\n                currentDeviceId = savedDeviceId_1;\n              }\n            }\n\n            return [2\n            /*return*/\n            , {\n              currentDeviceId: currentDeviceId,\n              devices: devices\n            }];\n        }\n      });\n    });\n  };\n\n  SpotifyWebPlayer.prototype.toggleSyncInterval = function (shouldSync) {\n    return __awaiter(this, void 0, void 0, function () {\n      var syncExternalDeviceInterval, error_10;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            syncExternalDeviceInterval = this.props.syncExternalDeviceInterval;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n\n            if (!(this.isExternalPlayer && shouldSync && !this.playerSyncInterval)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.syncDevice()];\n\n          case 2:\n            _a.sent();\n\n            clearInterval(this.playerSyncInterval);\n            this.playerSyncInterval = window.setInterval(this.syncDevice, syncExternalDeviceInterval * 1000);\n            _a.label = 3;\n\n          case 3:\n            if ((!shouldSync || !this.isExternalPlayer) && this.playerSyncInterval) {\n              clearInterval(this.playerSyncInterval);\n              this.playerSyncInterval = undefined;\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            error_10 = _a.sent(); // eslint-disable-next-line no-console\n\n            console.error(error_10);\n            return [3\n            /*break*/\n            , 5];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SpotifyWebPlayer.prototype.toggleProgressBar = function () {\n    var isPlaying = this.state.isPlaying;\n    /* istanbul ignore else */\n\n    if (isPlaying) {\n      /* istanbul ignore else */\n      if (!this.playerProgressInterval) {\n        this.playerProgressInterval = window.setInterval(this.updateSeekBar, this.seekUpdateInterval);\n      }\n    } else if (this.playerProgressInterval) {\n      clearInterval(this.playerProgressInterval);\n      this.playerProgressInterval = undefined;\n    }\n  };\n\n  SpotifyWebPlayer.prototype.render = function () {\n    var _a = this.state,\n        currentDeviceId = _a.currentDeviceId,\n        deviceId = _a.deviceId,\n        devices = _a.devices,\n        error = _a.error,\n        errorType = _a.errorType,\n        isActive = _a.isActive,\n        isMagnified = _a.isMagnified,\n        isPlaying = _a.isPlaying,\n        isUnsupported = _a.isUnsupported,\n        nextTracks = _a.nextTracks,\n        playerPosition = _a.playerPosition,\n        position = _a.position,\n        previousTracks = _a.previousTracks,\n        status = _a.status,\n        track = _a.track,\n        volume = _a.volume;\n    var _b = this.props,\n        locale = _b.locale,\n        name = _b.name,\n        showSaveIcon = _b.showSaveIcon,\n        token = _b.token,\n        updateSavedStatus = _b.updateSavedStatus;\n    var isReady = [STATUS.READY, STATUS.UNSUPPORTED].indexOf(status) >= 0;\n    var isPlaybackError = errorType === 'playback_error';\n    var localeMerged = getLocale(locale);\n    var output = React.createElement(Loader, {\n      styles: this.styles\n    });\n    var info;\n\n    if (isPlaybackError) {\n      info = React.createElement(\"p\", null, error);\n    }\n\n    if (isReady) {\n      /* istanbul ignore else */\n      if (!info) {\n        info = React.createElement(Info, {\n          isActive: isActive,\n          locale: localeMerged,\n          onFavoriteStatusChange: this.handleFavoriteStatusChange,\n          showSaveIcon: showSaveIcon,\n          styles: this.styles,\n          token: token,\n          track: track,\n          updateSavedStatus: updateSavedStatus\n        });\n      }\n\n      output = React.createElement(React.Fragment, null, React.createElement(\"div\", null, info), React.createElement(Controls, {\n        isExternalDevice: this.isExternalPlayer,\n        isPlaying: isPlaying,\n        locale: localeMerged,\n        nextTracks: nextTracks,\n        onClickNext: this.handleClickNext,\n        onClickPrevious: this.handleClickPrevious,\n        onClickTogglePlay: this.handleClickTogglePlay,\n        previousTracks: previousTracks,\n        styles: this.styles\n      }), React.createElement(Actions, {\n        currentDeviceId: currentDeviceId,\n        deviceId: deviceId,\n        devices: devices,\n        isDevicesOpen: isUnsupported && !deviceId,\n        locale: localeMerged,\n        onClickDevice: this.handleClickDevice,\n        playerPosition: playerPosition,\n        setVolume: this.setVolume,\n        styles: this.styles,\n        volume: volume\n      }));\n    }\n\n    if (status === STATUS.ERROR) {\n      output = React.createElement(ErrorMessage, {\n        styles: this.styles\n      }, name, \": \", error);\n    }\n\n    return React.createElement(Player, {\n      ref: this.ref,\n      styles: this.styles\n    }, isReady && React.createElement(Slider, {\n      isMagnified: isMagnified,\n      onChangeRange: this.handleChangeRange,\n      onToggleMagnify: this.handleToggleMagnify,\n      position: position,\n      styles: this.styles\n    }), React.createElement(Content, {\n      styles: this.styles\n    }, output));\n  }; // eslint-disable-next-line react/static-property-placement\n\n\n  SpotifyWebPlayer.defaultProps = {\n    callback: function callback() {\n      return undefined;\n    },\n    magnifySliderOnHover: false,\n    name: 'Spotify Web Player',\n    showSaveIcon: false,\n    syncExternalDeviceInterval: 5,\n    syncExternalDevice: false\n  };\n  return SpotifyWebPlayer;\n}(React.PureComponent);\n\nexport * from './types';\nexport default SpotifyWebPlayer;\nexport { STATUS, TYPE } from './utils';","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,aAApB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SACEC,UADF,EAEEC,gBAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,IAPF,EAQEC,SARF,EASEC,SATF,QAUO,WAVP;AAWA,SAASC,eAAT,QAAgC,UAAhC;AAiBA,SACEC,SADF,EAEEC,iBAFF,EAGEC,YAHF,EAIEC,iBAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,MAPF,EAQEC,IARF,EASEC,WATF,QAUO,SAVP;;AAYA;AAAA;AAAA;EAA+BC;;EA0D7B,0BAAYC,KAAZ,EAAwB;IAAxB,YACEC,kBAAMD,KAAN,KAAY,IADd;;IAzDQE,iBAAW,KAAX;IACAA,mBAAa;MACnBC,OAAO,EAAE,EADU;MAEnBC,UAAU,EAAE,CAFO;MAGnBC,EAAE,EAAE,EAHe;MAInBC,KAAK,EAAE,EAJY;MAKnBC,IAAI,EAAE,EALa;MAMnBC,GAAG,EAAE;IANc,CAAb;IASAN,uBAAiB/B,OAAO,CAAC,UAACsC,IAAD,EAAK;MACpC,IAAMC,WAAW,GAAgB;QAC/BC,WAAW,EAAEC,SADkB;QAE/BC,IAAI,EAAED;MAFyB,CAAjC;MAKA;;MACA,IAAIH,IAAJ,EAAU;QACR,IAAMK,GAAG,GAAGC,KAAK,CAACC,OAAN,CAAcP,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAAzC;;QAEA,IAAI,CAACK,GAAG,CAACG,KAAJ,CAAU,aAAC;UAAI,kBAAW,CAACC,CAAD,CAAX;QAAc,CAA7B,CAAL,EAAqC;UACnC;UACAC,OAAO,CAACC,KAAR,CAAc,aAAd;UAEA,OAAOV,WAAP;QACD;;QAED,IAAII,GAAG,CAACO,IAAJ,CAAS,aAAC;UAAI,wBAAiB,CAACH,CAAD,CAAjB,KAAyB,OAAzB;QAAgC,CAA9C,CAAJ,EAAqD;UACnD,IAAI,CAACJ,GAAG,CAACG,KAAJ,CAAU,aAAC;YAAI,wBAAiB,CAACC,CAAD,CAAjB,KAAyB,OAAzB;UAAgC,CAA/C,CAAL,EAAuD;YACrD;YACAC,OAAO,CAACG,IAAR,CAAa,4CAAb;UACD;;UAEDZ,WAAW,CAACG,IAAZ,GAAmBC,GAAG,CAACS,MAAJ,CAAW,aAAC;YAAI,kBAAW,CAACL,CAAD,CAAX,IAAkB3B,iBAAiB,CAAC2B,CAAD,CAAjB,KAAyB,OAA3C;UAAkD,CAAlE,CAAnB;QACD,CAPD,MAOO;UACL,IAAIJ,GAAG,CAACU,MAAJ,GAAa,CAAjB,EAAoB;YAClB;YACAL,OAAO,CAACG,IAAR,CAAa,kEAAb;UACD,CAJI,CAML;;;UACAZ,WAAW,CAACC,WAAZ,GAA0BG,GAAG,CAAC,CAAD,CAA7B;QACD;MACF;;MAED,OAAOJ,WAAP;IACD,CApC+B,CAAxB;IAsCAR,oBAAc,KAAd;IAIAA,YAAMhC,KAAK,CAACuD,SAAN,EAAN;IACAvB,2BAAqB,GAArB;;IAkMAA,0BAAoB,UAAOwB,QAAP,EAAuB;MAAA;;;;;;cACzCC,KAAK,GAAK,KAAKC,KAAL,CAAUD,KAApB;cACFE,KAAsB,KAAK7B,KAA3B,EAAE8B,QAAQ,cAAV,EAAYC,KAAK,WAAjB;cACFC,QAAQ,GAAG,CAAX;;;;;;cAGIC,UAAU,GAAGP,QAAQ,GAAG,GAAxB;mBAEF,KAAKQ,kBAAL;cAAA;cAAA;cACFF,QAAQ,GAAGG,IAAI,CAACxC,KAAL,CAAWgC,KAAK,CAACvB,UAAN,GAAmB6B,UAA9B,CAAX;cACA;cAAA;cAAA,EAAM/C,IAAI,CAAC6C,KAAD,EAAQC,QAAR,CAAV;;;cAAAI;;cAEA,KAAKC,WAAL,CAAiB;gBACfX,QAAQ,UADO;gBAEfY,UAAU,EAAEN;cAFG,CAAjB;;;;;;mBAIS,KAAKO,QAAL;cAAA;cAAA;cACM;cAAA;cAAA,EAAM,KAAKA,MAAL,CAAYC,eAAZ,EAAN;;;cAATZ,KAAK,GAAIQ,SAAT;mBAEFR;cAAA;cAAA;cACFI,QAAQ,GAAGG,IAAI,CAACxC,KAAL,CAAWiC,KAAK,CAACa,YAAN,CAAmBC,aAAnB,CAAiCC,WAAjC,GAA+CV,UAA1D,CAAX;cACA;cAAA;cAAA,EAAM,KAAKM,MAAL,CAAYrD,IAAZ,CAAiB8C,QAAjB,CAAN;;;cAAAI;;cAEA,KAAKC,WAAL,CAAiB;gBACfX,QAAQ,UADO;gBAEfY,UAAU,EAAEN;cAFG,CAAjB;;;;;;cAKA,KAAKK,WAAL,CAAiB;gBAAEX,QAAQ,EAAE;cAAZ,CAAjB;;;;cAIJ,IAAII,QAAJ,EAAc;gBACZA,QAAQ,uBACH,KAAKF,KADF,GACO;kBACbgB,IAAI,EAAE/C,IAAI,CAACgD;gBADE,CADP,EAAR;cAID;;;;;;;mCAED;;cACA1B,OAAO,CAACC,KAAR,CAAc0B,OAAd;;;;;;;;;;;OAxC+C;IA0ClD,CA1CO;;IA4CA5C,8BAAwB;MAAA;;;;;cACtB6C,QAAQ,GAAK,KAAKnB,KAAL,CAAUmB,QAAvB;;;;;;cAGN;cAAA;cAAA,EAAM,KAAKC,UAAL,CAAgB,CAAC,KAAKd,gBAAN,IAA0B,CAACa,QAA3C,CAAN;;;cAAAlB;;;;;;;mCAEA;;cACAV,OAAO,CAACC,KAAR,CAAc6B,OAAd;;;;;;;;;;;OAP4B;IAS/B,CATO;;IAWA/C,4BAAsB;MAAA;;;;;;;;;;mBAGtB,KAAKgC,kBAAL;cAAA;cAAA;cACMH,KAAK,GAAK,KAAK/B,KAAL,CAAU+B,KAApB;cAER;cAAA;cAAA,EAAM9C,QAAQ,CAAC8C,KAAD,CAAd;;;cAAAF;;cACA,KAAKqB,WAAL,GAAmBC,MAAM,CAACC,UAAP,CAAkB;gBACnClD,KAAI,CAACmD,UAAL;cACD,CAFkB,EAEhB,GAFgB,CAAnB;;;;;;mBAGS,KAAKd,QAAL;cAAA;cAAA;cACT;cAAA;cAAA,EAAM,KAAKA,MAAL,CAAYe,aAAZ,EAAN;;;cAAAzB;;;;;;;;;;mCAGF;;cACAV,OAAO,CAACC,KAAR,CAAcmC,OAAd;;;;;;;;;;;OAf0B;IAiB7B,CAjBO;;IAmBArD,wBAAkB;MAAA;;;;;;;;;;mBAGlB,KAAKgC,kBAAL;cAAA;cAAA;cACMH,KAAK,GAAK,KAAK/B,KAAL,CAAU+B,KAApB;cAER;cAAA;cAAA,EAAMjD,IAAI,CAACiD,KAAD,CAAV;;;cAAAF;;cACA,KAAKqB,WAAL,GAAmBC,MAAM,CAACC,UAAP,CAAkB;gBACnClD,KAAI,CAACmD,UAAL;cACD,CAFkB,EAEhB,GAFgB,CAAnB;;;;;;mBAGS,KAAKd,QAAL;cAAA;cAAA;cACT;cAAA;cAAA,EAAM,KAAKA,MAAL,CAAYiB,SAAZ,EAAN;;;cAAA3B;;;;;;;;;;mCAGF;;cACAV,OAAO,CAACC,KAAR,CAAcqC,OAAd;;;;;;;;;;;OAfsB;IAiBzB,CAjBO;;IAmBAvD,0BAAoB,UAAOwD,QAAP,EAAuB;MAAA;;;;;;cACzCC,aAAa,GAAK,KAAK/B,KAAL,CAAU+B,aAA5B;cACF9B,KAA8C,KAAK7B,KAAnD,EAAE4D,QAAQ,cAAV,EAAYC,sBAAsB,4BAAlC,EAAoC9B,KAAK,WAAzC;cAEN,KAAKM,WAAL,CAAiB;gBAAEyB,eAAe,EAAEJ;cAAnB,CAAjB;;;;;;cAGE;cAAA;cAAA,EAAMvE,SAAS,CAAC4C,KAAD,EAAQ2B,QAAR,CAAf;;;cAAAtB;cAEA;;;cACA,IAAIyB,sBAAJ,EAA4B;gBAC1BE,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuCN,QAAvC;cACD;;mBAGGC;cAAA;cAAA;cACF;cAAA;cAAA,EAAM,KAAKN,UAAL,EAAN;;;cAAAjB;;cAEoC;cAAA;cAAA,EAAMvD,gBAAgB,CAACkD,KAAD,CAAtB;;;cAA9BQ,MAAM,GAAwBH,SAA9B;oBAEFG,MAAM,IAAI,CAACA,MAAM,CAAC0B,UAAlB,IAAgCL,WAAhC;cAAA;cAAA;cACF;cAAA;cAAA,EAAM,KAAKZ,UAAL,CAAgB,IAAhB,CAAN;;;cAAAZ;;;;;;;;;;mCAIJ;;cACAjB,OAAO,CAACC,KAAR,CAAc8C,OAAd;;;;;;;;;;;OA1B+C;IA4BlD,CA5BO;;IA8BAhE,mCAA6B,UAACiE,MAAD,EAAgB;MAC3C,WAAO,GAAKjE,KAAI,CAAC0B,KAAL,CAAUwC,OAAtB;MACA,YAAQ,GAAKlE,KAAI,CAACF,KAAL,CAAU8B,QAAvB;;MAER5B,KAAI,CAACmC,WAAL,CAAiB;QAAE+B,OAAO,EAAED;MAAX,CAAjB;MAEA;;;MACA,IAAIC,OAAO,KAAKD,MAAhB,EAAwB;QACtBrC,QAAS,uBACJ5B,KAAI,CAAC0B,KADD,GACM;UACbwC,OAAO,EAAED,MADI;UAEbvB,IAAI,EAAE/C,IAAI,CAACwE;QAFE,CADN,EAAT;MAKD;IACF,CAdO;;IAgBAnE,2BAAqB,UAAO0C,IAAP,EAAqB0B,OAArB,EAAoC;MAAA;;;;;;;;cACvDH,MAAM,GAAK,KAAKvC,KAAL,CAAUuC,MAArB;cACFI,eAAe,GAAG3B,IAAI,KAAK,gBAA3B;cACA4B,qBAAqB,GAAG5B,IAAI,KAAK,sBAAjC;cACF6B,UAAU,GAAGN,MAAb;cACAO,OAAO,GAAoB,EAA3B;oBAEA,KAAKnC,MAAL,IAAe,CAACgC,kBAAhB;cAAA;cAAA;cACF;cAAA;cAAA,EAAM,KAAKhC,MAAL,CAAYoC,UAAZ,EAAN;;;cAAAvC;;;;;mBAGEoC;cAAA;cAAA;cACFC,UAAU,GAAG7E,MAAM,CAACgF,WAApB;cAEQ7C,KAAK,GAAK,KAAK/B,KAAL,CAAU+B,KAApB;cAEY;cAAA;cAAA,EAAMnD,UAAU,CAACmD,KAAD,CAAhB;;;cAAjBF,KAAiBO,UAAuBsC,OAAxC,SAAO,mBAAG,EAAH,GAAK7C,EAAf;;;;cAGF,IAAI,CAAC2C,qBAAD,IAA0B,CAACD,eAA/B,EAAgD;gBAC9CE,UAAU,GAAG7E,MAAM,CAACiF,KAApB;cACD;;cAED,KAAKxC,WAAL,CAAiB;gBACfqC,OAAO,SADQ;gBAEftD,KAAK,EAAEkD,OAFQ;gBAGfQ,SAAS,EAAElC,IAHI;gBAIfmC,cAAc,EAAE,KAJD;gBAKfpB,aAAa,EAAEa,qBALA;gBAMfL,MAAM,EAAEM;cANO,CAAjB;;;;;;OAvB+D;IA+BhE,CA/BO;;IAiCAvE,iCAA2B,UAAO0B,KAAP,EAAqC;MAAA;;;;;;;;mBAGhEA;cAAA;cAAA;cAEAoD,MAAM,GAOJpD,KAAK,OAPP,EACAF,QAAQ,GAMNE,KAAK,SAPP,EAEAC,KAKED,KAAK,aAPP,EAGEQ,qBAHF,EAGmB6C,KAAK,WAHxB,EAG0B9E,OAAO,aAHjC,EAGmCwC,WAAW,iBAH9C,EAGgDtC,EAAE,QAHlD,EAGoD6E,gBAHpD,EAG0D1E,GAAG,SAH7D,EAIE2E,WAAW,iBAJb,EAKEC,eAAe,qBALjB;cASIC,SAAS,GAAG,CAACL,MAAb;cACS;cAAA;cAAA,EAAM,KAAKzC,MAAL,CAAa+C,SAAb,EAAN;;;cAATC,MAAM,GAAGC,SAAT;cACA7D,KAAK,GAAG;gBACZxB,OAAO,SADK;gBAEZC,UAAU,EAAEuC,WAFA;gBAGZtC,EAAE,IAHU;gBAIZC,KAAK,EAAE,KAAKmF,aAAL,CAAmBR,KAAnB,CAJK;gBAKZ1E,IAAI,QALQ;gBAMZC,GAAG;cANS,CAAR;cAQFkF,UAAU,SAAV;;cAEJ,IAAIhE,QAAQ,KAAK,CAAjB,EAAoB;gBAClBgE,UAAU,GAAG;kBACXC,UAAU,EAAER,WADD;kBAEXzD,QAAQ,EAAE,CAFC;kBAGXkE,cAAc,EAAER,eAHL;kBAIXzD,KAAK;gBAJM,CAAb;cAMD;;cAED,KAAKU,WAAL,CAAgBwD;gBACdzE,KAAK,EAAE,EADO;gBAEd0D,SAAS,EAAE,EAFG;gBAGd/B,QAAQ,EAAE,IAHI;gBAIdsC,SAAS,WAJK;gBAKd/C,UAAU,EAAEZ,QALE;gBAMd6D,MAAM,EAAE5F,KAAK,CAAC4F,MAAD;cANC,GAOXG,UAPW,CAAhB;;;;;;mBASS,KAAKxD,kBAAL;cAAA;cAAA;cACT;cAAA;cAAA,EAAM,KAAKmB,UAAL,EAAN;;;cAAAmC;;;;;;;cAEA,KAAKnD,WAAL,CAAiB;gBACfU,QAAQ,EAAE,KADK;gBAEfsC,SAAS,EAAE,KAFI;gBAGfM,UAAU,EAAE,EAHG;gBAIfjE,QAAQ,EAAE,CAJK;gBAKfkE,cAAc,EAAE,EALD;gBAMfjE,KAAK,EAAE;kBACLxB,OAAO,EAAE,EADJ;kBAELC,UAAU,EAAE,CAFP;kBAGLC,EAAE,EAAE,EAHC;kBAILC,KAAK,EAAE,EAJF;kBAKLC,IAAI,EAAE,EALD;kBAMLC,GAAG,EAAE;gBANA;cANQ,CAAjB;;;;;;;;;mCAiBF;;cACAW,OAAO,CAACC,KAAR,CAAc0E,OAAd;;;;;;;;;;;OAjEoE;IAmEvE,CAnEO;;IAqEA5F,2BAAqB,UAAO2B,EAAP,EAAsC;UAA7BkE,SAAS;;;;;;;cACR;cAAA;cAAA,EAAM,KAAKC,iBAAL,CAAuBD,SAAvB,CAAN;;;cAA/B3D,KAA+BoD,SAA/B,EAAE1B,eAAe,qBAAjB,EAAmBY,OAAO,aAA1B;cAEN,KAAKrC,WAAL,CAAiB;gBACfyB,eAAe,iBADA;gBAEfJ,QAAQ,EAAEqC,SAFK;gBAGfrB,OAAO,SAHQ;gBAIfK,cAAc,EAAE,KAJD;gBAKfZ,MAAM,EAAE4B,SAAS,GAAGnG,MAAM,CAACqG,KAAV,GAAkBrG,MAAM,CAACsG;cAL3B,CAAjB;;;;;;;IAOD,CAVO;;IAYAhG,4BAAsB;MACpB,wBAAoB,GAAKA,KAAI,CAACF,KAAL,CAAUmG,oBAAnC;;MAER,IAAIA,oBAAJ,EAA0B;QACxBjG,KAAI,CAACmC,WAAL,CAAiB,UAAC+D,aAAD,EAAqB;UACpC,OAAO;YAAEC,WAAW,EAAE,CAACD,aAAa,CAACC;UAA9B,CAAP;QACD,CAFD;MAGD;IACF,CARO;;IA6BAnG,yBAAmB;MACjB,UAAM,GAAKA,KAAI,CAAC0B,KAAL,CAAU2D,MAArB;MACF,SAAkBrF,KAAI,CAACF,KAAvB;MAAA,IAAEO,IAAI,UAAN;MAAA,IAAQwB,KAAK,WAAb;;MAEN7B,KAAI,CAACmC,WAAL,CAAiB;QAAE0C,cAAc,EAAE;MAAlB,CAAjB,EAJyB,CAMzB;;;MACA7E,KAAI,CAACqC,MAAL,GAAc,IAAIY,MAAM,CAACmD,OAAP,CAAe5H,MAAnB,CAA0B;QACtC6H,aAAa,EAAE,uBAACzE,QAAD,EAAgC;UAC7CA,QAAQ,CAACC,KAAD,CAAR;QACD,CAHqC;QAItCxB,IAAI,MAJkC;QAKtCgF,MAAM;MALgC,CAA1B,CAAd;;MAQArF,KAAI,CAACqC,MAAL,CAAYiE,WAAZ,CAAwB,OAAxB,EAAiCtG,KAAI,CAACuG,kBAAtC;;MACAvG,KAAI,CAACqC,MAAL,CAAYiE,WAAZ,CAAwB,WAAxB,EAAqCtG,KAAI,CAACuG,kBAA1C;;MACAvG,KAAI,CAACqC,MAAL,CAAYiE,WAAZ,CAAwB,sBAAxB,EAAgDtG,KAAI,CAACwG,wBAArD;;MACAxG,KAAI,CAACqC,MAAL,CAAYiE,WAAZ,CAAwB,sBAAxB,EAAgD,UAACpF,KAAD,EAAwB;QACtE,YAAI,CAACuF,kBAAL,CAAwB,sBAAxB,EAAgDvF,KAAK,CAACkD,OAAtD;MAA8D,CADhE;;MAGApE,KAAI,CAACqC,MAAL,CAAYiE,WAAZ,CAAwB,sBAAxB,EAAgD,UAACpF,KAAD,EAAwB;QACtE,YAAI,CAACuF,kBAAL,CAAwB,sBAAxB,EAAgDvF,KAAK,CAACkD,OAAtD;MAA8D,CADhE;;MAGApE,KAAI,CAACqC,MAAL,CAAYiE,WAAZ,CAAwB,eAAxB,EAAyC,UAACpF,KAAD,EAAwB;QAC/D,YAAI,CAACuF,kBAAL,CAAwB,eAAxB,EAAyCvF,KAAK,CAACkD,OAA/C;MAAuD,CADzD;;MAGApE,KAAI,CAACqC,MAAL,CAAYiE,WAAZ,CAAwB,gBAAxB,EAA0C,UAACpF,KAAD,EAAwB;QAChE,YAAI,CAACuF,kBAAL,CAAwB,gBAAxB,EAA0CvF,KAAK,CAACkD,OAAhD;MAAwD,CAD1D;;MAIApE,KAAI,CAACqC,MAAL,CAAYqE,OAAZ;IACD,CAhCO,CAxdgB,CA0fxB;;;IACQ1G,sBAAgB,UAAC+E,KAAD,EAAwB;MAC9C,IAAM4B,KAAK,GAAG1E,IAAI,CAAC2E,GAAL,CAAQC,KAAR,OAAIC,yBAAQ/B,KAAK,CAACgC,MAAN,CAAaC,GAAb,CAAiB,aAAC;QAAI,QAAC,CAACL,KAAF;MAAO,CAA7B,CAAR,GAAsC,KAAtC,CAAJ,CAAd;MACA,IAAMM,KAAK,GACTlC,KAAK,CAACgC,MAAN,CAAaG,IAAb,CAAkB,aAAC;QAAI,QAAC,CAACP,KAAF,KAAYA,KAAZ;MAAiB,CAAxC,KAA8C,EADhD;MAGA,OAAOM,KAAK,CAACE,GAAb;IACD,CANO;;IAQAnH,0BAAoB,UAACG,EAAD,EAAW;MACrCH,KAAI,CAACmC,WAAL,CAAiB;QAAEyB,eAAe,EAAEzD,EAAnB;QAAuBgF,SAAS,EAAE;MAAlC,CAAjB;IACD,CAFO;;IAIAnF,kBAAY,UAAOqF,MAAP,EAAqB;MAAA;;;;;cAC/BxD,KAAK,GAAK,KAAK/B,KAAL,CAAU+B,KAApB;mBAGJ,KAAKG,kBAAL;cAAA;cAAA;cACF;cAAA;cAAA,EAAM9C,SAAS,CAAC2C,KAAD,EAAQI,IAAI,CAACxC,KAAL,CAAW4F,MAAM,GAAG,GAApB,CAAR,CAAf;;;cAAA1D;;cACA;cAAA;cAAA,EAAM,KAAKwB,UAAL,EAAN;;;cAAAxB;;;;;;;mBACS,KAAKU,QAAL;cAAA;cAAA;cACT;cAAA;cAAA,EAAM,KAAKA,MAAL,CAAYnD,SAAZ,CAAsBmG,MAAtB,CAAN;;;cAAA1D;;;;;cAGF,KAAKQ,WAAL,CAAiB;gBAAEkD,MAAM;cAAR,CAAjB;;;;;;OAXuC;IAYxC,CAZO;;IAcArF,mBAAa;MAAA;;;;;cACnB,IAAI,CAAC,KAAK6C,QAAV,EAAoB;gBAClB;gBAAA;gBAAA;cACD;;cAEOW,QAAQ,GAAK,KAAK9B,KAAL,CAAU8B,QAAvB;cACA3B,KAAK,GAAK,KAAK/B,KAAL,CAAU+B,KAApB;;;;;;cAG8B;cAAA;cAAA,EAAMlD,gBAAgB,CAACkD,KAAD,CAAtB;;;cAA9BQ,MAAM,GAAwBV,SAA9B;cACFF,KAAK,GAAG,KAAK2F,UAAb;;cAEJ,IAAI,CAAC/E,MAAL,EAAa;gBACX,MAAM,IAAIgF,KAAJ,CAAU,WAAV,CAAN;cACD;cAED;;;cACA,IAAIhF,MAAM,CAACiF,IAAX,EAAiB;gBACf7F,KAAK,GAAG;kBACNxB,OAAO,EAAEoC,MAAM,CAACiF,IAAP,CAAYrH,OADf;kBAENC,UAAU,EAAEmC,MAAM,CAACiF,IAAP,CAAY7E,WAFlB;kBAGNtC,EAAE,EAAEkC,MAAM,CAACiF,IAAP,CAAYnH,EAHV;kBAINC,KAAK,EAAE,KAAKmF,aAAL,CAAmBlD,MAAM,CAACiF,IAAP,CAAYvC,KAA/B,CAJD;kBAKN1E,IAAI,EAAEgC,MAAM,CAACiF,IAAP,CAAYjH,IALZ;kBAMNC,GAAG,EAAE+B,MAAM,CAACiF,IAAP,CAAYhH;gBANX,CAAR;cAQD;;cAED,KAAK6B,WAAL,CAAiB;gBACfjB,KAAK,EAAE,EADQ;gBAEf0D,SAAS,EAAE,EAFI;gBAGf/B,QAAQ,EAAE,IAHK;gBAIfsC,SAAS,EAAE9C,MAAM,CAAC0B,UAJH;gBAKf0B,UAAU,EAAE,EALG;gBAMfC,cAAc,EAAE,EAND;gBAOftD,UAAU,EAAEC,MAAM,CAACiF,IAAP,GAAcjF,MAAM,CAACkF,WAArB,GAAmC,CAPhC;gBAQftD,MAAM,EAAEvE,MAAM,CAACqG,KARA;gBASftE,KAAK,OATU;gBAUf4D,MAAM,EAAE7F,WAAW,CAAC6C,MAAM,CAACmF,MAAP,CAAcC,cAAf;cAVJ,CAAjB;;;;;;;cAaM/F,KAAK,GAAG;gBACZmB,QAAQ,EAAE,KADE;gBAEZsC,SAAS,EAAE,KAFC;gBAGZ3D,QAAQ,EAAE,CAHE;gBAIZC,KAAK,EAAE,KAAK2F;cAJA,CAAR;;cAON,IAAI5D,QAAJ,EAAc;gBACZ,KAAKrB,WAAL,CAAgBwD;kBACd/B,eAAe,EAAEJ;gBADH,GAEX9B,KAFW,CAAhB;gBAKA;gBAAA;gBAAA;cACD;;cAED,KAAKS,WAAL,CAAgBwD;gBACdzE,KAAK,EAAEwG,OAAK,CAACtD,OADC;gBAEdQ,SAAS,EAAE,eAFG;gBAGdX,MAAM,EAAEvE,MAAM,CAACiF;cAHD,GAIXjD,KAJW,CAAhB;;;;;;;;;;;OAzDiB;IAgEpB,CAhEO;;IA4GA1B,qBAAe;MAAA;;;;;;cACf2B,KAAiC,KAAKD,KAAtC,EAAEkC,eAAe,qBAAjB,EAAmBuB,SAAS,eAA5B;cACAjD,KAA0B,KAAKpC,KAA/B,EAAE6H,MAAM,YAAR,EAAU9F,KAAK,WAAf,EAAiBlB,IAAI,UAArB;oBAEFwE,SAAS,IAAI,OAAOwC,MAAP,KAAkB,QAA/B,IAA2C9G,KAAK,CAACC,OAAN,CAAcH,IAAd,IAA3C;cAAA;cAAA;cACF;cAAA;cAAA,EAAM7B,IAAI,CAAC+C,KAAD,EAAQ;gBAAE2B,QAAQ,EAAEI,eAAZ;gBAA6B+D,MAAM,QAAnC;gBAAqChH,IAAI;cAAzC,CAAR,CAAV;;;cAAA2E;;;;;;;;;;OALmB;IAOtB,CAPO;;IASAtF,mBAAa,UAAO4H,IAAP,EAAmB;MAAZ;QAAAA;MAAY;;;;;;;;;;cAChCjG,KAA8C,KAAKD,KAAnD,EAAEkC,eAAe,qBAAjB,EAAmBuB,SAAS,eAA5B,EAA8B0C,WAAW,iBAAzC;cACA3F,KAA0B,KAAKpC,KAA/B,EAAE6H,MAAM,YAAR,EAAU9F,KAAK,WAAf,EAAiBlB,IAAI,UAArB;cACAmH,gBAAgB,GAAGF,IAAI,IAAIC,WAA3B;cACArH,WAAW,GAAG,KAAKuH,cAAL,CAAoBpH,IAApB,CAAd;;;;;;mBAIA,KAAKqB,kBAAL;cAAA;cAAA;mBACE,CAACmD,WAAD;cAAA;cAAA;cACF;cAAA;cAAA,EAAMrG,IAAI,CAAC+C,KAAD,EAAM8D;gBACdnC,QAAQ,EAAEI,eADI;gBAEd+D,MAAM;cAFQ,GAGVG,gBAAgB,GAAGtH,WAAH,GAAiBE,SAHvB,CAAN,CAAV;;;cAAA4E;;;;;;;cAMA;cAAA;cAAA,EAAMzG,KAAK,CAACgD,KAAD,CAAX;;;cAAAyD;;cAEA,KAAKnD,WAAL,CAAiB;gBAAEgD,SAAS,EAAE;cAAb,CAAjB;;;;cAGF,KAAKnC,WAAL,GAAmBC,MAAM,CAACC,UAAP,CAAkB;gBACnClD,KAAI,CAACmD,UAAL;cACD,CAFkB,EAEhB,GAFgB,CAAnB;;;;;;mBAGS,KAAKd,QAAL;cAAA;cAAA;cACW;cAAA;cAAA,EAAM,KAAKA,MAAL,CAAYC,eAAZ,EAAN;;;cAAd0F,WAAW,GAAG1C,SAAd;cAEN,KAAKjD,MAAL,CAAY4F,eAAZ;oBAIG,CAACD,WAAD,IAAgB,CAAC,EAAExH,WAAW,CAACC,WAAZ,IAA2BD,WAAW,CAACG,IAAzC,CAAlB,IACCmH,gBAAgB,IAAIE,WAApB,IAAmCA,WAAW,CAAClD,SADhD;cAAA;cAAA;cAGA;cAAA;cAAA,EAAMhG,IAAI,CAAC+C,KAAD,EAAM8D;gBACdnC,QAAQ,EAAEI,eADI;gBAEd+D,MAAM;cAFQ,GAGVG,gBAAgB,GAAGtH,WAAH,GAAiBE,SAHvB,CAAN,CAAV;;;cAAA4E;;;;;;;cAMA;cAAA;cAAA,EAAM,KAAKjD,MAAL,CAAYS,UAAZ,EAAN;;;cAAAwC;;;;;cAIJ,IAAIuC,WAAJ,EAAiB;gBACf,KAAK1F,WAAL,CAAiB;kBAAE0F,WAAW,EAAE;gBAAf,CAAjB;cACD;;;;;;;mCAED;;cACA5G,OAAO,CAACC,KAAR,CAAcgH,OAAd;;;;;;;;;;;;IAEH,CAnDO;;IAqDAlI,sBAAgB;MAAA;;;;;;cACtB,IAAI,CAAC,KAAK6C,QAAV,EAAoB;gBAClB;gBAAA;gBAAA;cACD;;cAEKlB,KAAwB,KAAKD,KAA7B,EAAEU,UAAU,gBAAZ,EAAcX,KAAK,WAAnB;;;;;;mBAIA,KAAKO,kBAAL;cAAA;cAAA;cACER,QAAQ,GAAGY,UAAU,GAAGX,KAAK,CAACvB,UAA9B;cAEJsB,QAAQ,GAAG2G,MAAM,CAAC,CAAC,CAACA,MAAM,CAACC,QAAP,CAAgB5G,QAAhB,IAA4BA,QAA5B,GAAuC,CAAxC,IAA6C,GAA9C,EAAmD6G,OAAnD,CAA2D,CAA3D,CAAD,CAAjB;cAEA,KAAKlG,WAAL,CAAiB;gBACfX,QAAQ,UADO;gBAEfY,UAAU,EAAEA,UAAU,GAAG,KAAKkG;cAFf,CAAjB;;;;;;mBAIS,KAAKjG,QAAL;cAAA;cAAA;cACM;cAAA;cAAA,EAAM,KAAKA,MAAL,CAAYC,eAAZ,EAAN;;;cAATZ,KAAK,GAAIQ,SAAT;cAEN;;cACA,IAAIR,KAAJ,EAAW;gBACHI,QAAQ,GAAGJ,KAAK,CAACF,QAAjB;gBACAA,QAAQ,GAAG2G,MAAM,CACrB,CAAErG,QAAQ,GAAGJ,KAAK,CAACa,YAAN,CAAmBC,aAAnB,CAAiCC,WAA7C,GAA4D,GAA7D,EAAkE4F,OAAlE,CAA0E,CAA1E,CADqB,CAAjB;gBAIN,KAAKlG,WAAL,CAAiB;kBACfX,QAAQ,UADO;kBAEfY,UAAU,EAAEN,QAAQ,GAAG,KAAKwG;gBAFb,CAAjB;cAID;;;;;;;;;;mCAGH;;cACArH,OAAO,CAACC,KAAR,CAAcqH,OAAd;;;;;;;;;;;OApCoB;IAsCvB,CAtCO;;IAwCAvI,oBAAc,UAAC0B,KAAD,EAAW;MAAV;QAAAA;MAAU;;MAC/B,IAAI,CAAC1B,KAAI,CAAC6C,QAAV,EAAoB;QAClB;MACD;;MAED7C,KAAI,CAACwI,QAAL,CAAc9G,KAAd;IACD,CANO;;IApuBN1B,KAAI,CAAC0B,KAAL,GAAa;MACXkC,eAAe,EAAE,EADN;MAEXJ,QAAQ,EAAE,EAFC;MAGXgB,OAAO,EAAE,EAHE;MAIXtD,KAAK,EAAE,EAJI;MAKX0D,SAAS,EAAE,EALA;MAMX/B,QAAQ,EAAE,KANC;MAOXgC,cAAc,EAAE,KAPL;MAQXsB,WAAW,EAAE,KARF;MASXhB,SAAS,EAAE,KATA;MAUXjB,OAAO,EAAE,KAVE;MAWXT,aAAa,EAAE,KAXJ;MAYXoE,WAAW,EAAE,KAZF;MAaXpC,UAAU,EAAE,EAbD;MAcXgD,cAAc,EAAE,QAdL;MAeXjH,QAAQ,EAAE,CAfC;MAgBXkE,cAAc,EAAE,EAhBL;MAiBXtD,UAAU,EAAE,CAjBD;MAkBX6B,MAAM,EAAEvE,MAAM,CAACsG,IAlBJ;MAmBXvE,KAAK,EAAEzB,KAAI,CAACoH,UAnBD;MAoBX/B,MAAM,EAAE7F,WAAW,CAACM,KAAK,CAAC4I,aAAP,CAAX,IAAoC;IApBjC,CAAb;IAuBA1I,KAAI,CAAC2I,MAAL,GAAcxJ,eAAe,CAACW,KAAK,CAAC6I,MAAP,CAA7B;;EACD;;EAYYC,+CAAb;;;;;;;;;YACE,KAAK/F,QAAL,GAAgB,IAAhB;YACQX,KAAY,aAAK2G,GAAL,CAASC,OAAT,MAAgB,IAAhB,IAAgBnH,aAAhB,GAAgB,MAAhB,GAAgBA,GAAEoH,qBAAF,EAAhB,KAA6C,EAA7C,EAA+CC,GAA3D,KAAG,mBAAG,CAAH,GAAI9G,EAAP;YAER,KAAKC,WAAL,CAAiB;cACfsG,cAAc,EAAEO,GAAG,GAAG/F,MAAM,CAACgG,WAAP,GAAqB,CAA3B,GAA+B,QAA/B,GAA0C,KAD3C;cAEfhF,MAAM,EAAEvE,MAAM,CAACwJ;YAFA,CAAjB;;YAKA,IAAI,CAACjG,MAAM,CAACkG,4BAAZ,EAA0C;cACxClG,MAAM,CAACkG,4BAAP,GAAsC,KAAKC,gBAA3C;YACD,CAFD,MAEO;cACL,KAAKA,gBAAL;YACD;;YAED;YAAA;YAAA,EAAM7J,iBAAiB,EAAvB;;;YAAA+F;;;;;;;;EACD,CAhBY;;EAkBAsD,gDAAb,UAAgCS,aAAhC,EAAsDnD,aAAtD,EAA0E;;;;;;;;;YAClEvE,KACJ,KAAKD,KADD,EAAEkC,eAAe,qBAAjB,EAAmBJ,QAAQ,cAA3B,EAA6BtC,KAAK,WAAlC,EAAoC2D,cAAc,oBAAlD,EAAoDM,SAAS,eAA7D,EAA+DlB,MAAM,YAArE,EAAuExC,KAAK,WAA5E;YAEAS,KASF,KAAKpC,KATH,EACJ4D,QAAQ,cADJ,EAEJ9B,QAAQ,cAFJ,EAGJ+F,MAAM,YAHF,EAIE2B,QAAQ,UAJV,EAKJC,YAAY,kBALR,EAMJC,kBAAkB,wBANd,EAOJ3H,KAAK,WAPD,EAQJlB,IAAI,UARA;YAUA8I,OAAO,GAAGvD,aAAa,CAACjC,MAAd,KAAyBvE,MAAM,CAACqG,KAAhC,IAAyC9B,MAAM,KAAKvE,MAAM,CAACqG,KAArE;YACA2D,WAAW,GAAG7I,KAAK,CAACC,OAAN,CAAcH,IAAd,IAChB,CAACrB,YAAY,CAAC+J,aAAa,CAAC1I,IAAf,EAAqBA,IAArB,CADG,GAEhB0I,aAAa,CAAC1I,IAAd,KAAuBA,IAFrB;YAGAH,WAAW,GAAG,KAAKuH,cAAL,CAAoBpH,IAApB,CAAd;YAEAgJ,OAAO,GAAG,CAAC,CAAC/F,eAAF,IAAqB,CAAC,EAAEpD,WAAW,CAACC,WAAZ,IAA2BD,WAAW,CAACG,IAAzC,CAAhC;YACAiJ,UAAU,GAAIF,WAAW,IAAIvE,SAAhB,IAA8B,CAAC,EAAEsE,OAAO,KAAK/F,QAAQ,IAAI4F,QAAjB,CAAT,CAA5C;kBAEFK,OAAO,IAAIC,aAAX;YAAA;YAAA;YACF;YAAA;YAAA,EAAM9K,IAAI,CAAC+C,KAAD,EAAM8D;cAAInC,QAAQ,EAAEI,eAAd;cAA+B+D,MAAM;YAArC,GAA0CnH,WAA1C,CAAN,CAAV;;;YAAA8E;YAEA;;;YACA,IAAI,CAACH,SAAL,EAAgB;cACd,KAAKhD,WAAL,CAAiB;gBAAEgD,SAAS,EAAE;cAAb,CAAjB;YACD;;YAED,IAAI,KAAKnD,gBAAT,EAA2B;cACzB,KAAKgB,WAAL,GAAmBC,MAAM,CAACC,UAAP,CAAkB;gBACnClD,KAAI,CAACmD,UAAL;cACD,CAFkB,EAEhB,GAFgB,CAAnB;YAGD;;;;;;;YACI,IAAIuG,WAAW,IAAI,CAACvE,SAApB,EAA+B;cACpC,KAAKhD,WAAL,CAAiB;gBAAE0F,WAAW,EAAE;cAAf,CAAjB;YACD;;;;;YAED,IAAI3B,aAAa,CAACjC,MAAd,KAAyBA,MAA7B,EAAqC;cACnCrC,QAAS,uBACJ,KAAKF,KADD,GACM;gBACbgB,IAAI,EAAE/C,IAAI,CAACD;cADE,CADN,EAAT;YAID;;kBAEGwG,aAAa,CAACtC,eAAd,KAAkCA,eAAlC,IAAqDA,kBAArD;YAAA;YAAA;;YACF,IAAI,CAAC6F,OAAL,EAAc;cACZ7H,QAAS,uBACJ,KAAKF,KADD,GACM;gBACbgB,IAAI,EAAE/C,IAAI,CAACkK;cADE,CADN,EAAT;YAID;;YAED;YAAA;YAAA,EAAM,KAAKC,kBAAL,CAAwB,KAAK9H,gBAA7B,CAAN;;;YAAAsD;;YACA;YAAA;YAAA,EAAM,KAAKyE,aAAL,EAAN;;;YAAAzE;;;;;YAGF,IAAIY,aAAa,CAACzE,KAAd,CAAoBtB,EAApB,KAA2BsB,KAAK,CAACtB,EAAjC,IAAuCsB,KAAK,CAACtB,EAAjD,EAAqD;cACnDyB,QAAS,uBACJ,KAAKF,KADD,GACM;gBACbgB,IAAI,EAAE/C,IAAI,CAACqK;cADE,CADN,EAAT;;cAKA,IAAIT,YAAJ,EAAkB;gBAChB,KAAKpH,WAAL,CAAiB;kBAAE+B,OAAO,EAAE;gBAAX,CAAjB;cACD;YACF;;kBAEGgC,aAAa,CAACf,SAAd,KAA4BA,YAA5B;YAAA;YAAA;YACF,KAAK8E,iBAAL;YACA;YAAA;YAAA,EAAM,KAAKH,kBAAL,CAAwB,KAAK9H,gBAA7B,CAAN;;;YAAAsD;;YAEA1D,QAAS,uBACJ,KAAKF,KADD,GACM;cACbgB,IAAI,EAAE/C,IAAI,CAACuK;YADE,CADN,EAAT;;;;YAMF,IAAIrI,KAAK,IAAIwH,aAAa,CAACxH,KAAd,KAAwBA,KAArC,EAA4C;cAC1C,KAAKsI,WAAL,GAAmB,IAAnB;;cAEA,IAAI,CAACtF,cAAL,EAAqB;gBACnB,KAAKuE,gBAAL;cACD,CAFD,MAEO;gBACL,KAAKe,WAAL,GAAmB,IAAnB;cACD;YACF;;kBAEGd,aAAa,CAACvK,IAAd,KAAuBwK,QAAvB,IAAmCA,QAAQ,KAAKnE,YAAhD;YAAA;YAAA;YACF;YAAA;YAAA,EAAM,KAAKrC,UAAL,CAAgB,CAACrB,KAAK,CAACtB,EAAvB,CAAN;;;YAAAmF;;;;;kBAGE+D,aAAa,CAAC1B,MAAd,KAAyBA,SAAzB;YAAA;YAAA;YACF;YAAA;YAAA,EAAM,KAAKyC,YAAL,EAAN;;;YAAA9E;;;;;kBAGEY,aAAa,CAACrB,cAAd,IAAgC,CAACA,iBAAjC;YAAA;YAAA;;YACF,IAAI3D,KAAK,KAAK,sBAAV,IAAoC,KAAKiJ,WAA7C,EAA0D;cACxD,KAAKA,WAAL,GAAmB,KAAnB;cACA,KAAKf,gBAAL;YACD;;kBAEGI,kBAAkB,IAAI,CAAC7I,OAAvB;YAAA;YAAA;YACkC;YAAA;YAAA,EAAMhC,gBAAgB,CAACkD,KAAD,CAAtB;;;YAA9BQ,MAAM,GAAwBiD,SAA9B;YAEN;;YACA,IAAIjD,MAAM,IAAIA,MAAM,CAAC0B,UAAjB,IAA+B1B,MAAM,CAACmF,MAAP,CAAcrH,EAAd,KAAqBqD,QAAxD,EAAkE;cAChE,KAAK6G,iBAAL,CAAuBhI,MAAM,CAACmF,MAAP,CAAcrH,EAArC;YACD;;;;;;;;;;;EAGN,CAhHY;;EAkHNyI,kDAAP;IACE,KAAK/F,QAAL,GAAgB,KAAhB;IAEA;;IACA,IAAI,KAAKR,MAAT,EAAiB;MACf,KAAKA,MAAL,CAAYoC,UAAZ;IACD;;IAED6F,aAAa,CAAC,KAAKC,kBAAN,CAAb;IACAD,aAAa,CAAC,KAAKE,sBAAN,CAAb;IACAC,YAAY,CAAC,KAAKzH,WAAN,CAAZ;EACD,CAXM;;EAaP0H,sBAAY9B,0BAAZ,EAAY,kBAAZ,EAA4B;SAA5B;MACQ,SAAwC,KAAKlH,KAA7C;MAAA,IAAEkC,eAAe,qBAAjB;MAAA,IAAmBJ,QAAQ,cAA3B;MAAA,IAA6BS,MAAM,YAAnC;MAEN,OAAQL,eAAe,IAAIA,eAAe,KAAKJ,QAAxC,IAAqDS,MAAM,KAAKvE,MAAM,CAACgF,WAA9E;IACD,CAJ2B;qBAAA;;EAAA,CAA5B;;EA6QckE,+CAAd,UAAgCzI,EAAhC,EAA0C;;;;;;;YAClCwB,KAAoC,KAAK7B,KAAzC,EAAE6D,sBAAsB,4BAAxB,EAA0B9B,KAAK,WAA/B;YACc;YAAA;YAAA,EAAMnD,UAAU,CAACmD,KAAD,CAAhB;;;YAAZ2C,OAAO,GAAKtC,UAAuBsC,OAAnC;YACJZ,eAAe,GAAGzD,EAAlB;;YAEJ,IAAIwD,sBAAJ,EAA4B;cACpBgH,kBAAgB9G,cAAc,CAAC+G,OAAf,CAAuB,cAAvB,CAAhB;cAEN;;cACA,IAAI,CAACD,eAAD,IAAkB,CAACnG,OAAO,CAACrD,IAAR,CAAa,UAACH,CAAD,EAAiB;gBAAK,QAAC,CAACb,EAAF,KAASwK,eAAT;cAAsB,CAAzD,CAAvB,EAAmF;gBACjF9G,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuCF,eAAvC;cACD,CAFD,MAEO;gBACLA,eAAe,GAAG+G,eAAlB;cACD;YACF;;YAED;YAAA;YAAA,EAAO;cAAE/G,eAAe,iBAAjB;cAAmBY,OAAO;YAA1B,CAAP;;;;EACD,CAjBa;;EAkJAoE,gDAAd,UAAiCiC,UAAjC,EAAoD;;;;;;YAC1CC,0BAA0B,GAAK,KAAKhL,KAAL,CAAUgL,0BAAzC;;;;;;kBAGF,KAAK9I,gBAAL,IAAyB6I,UAAzB,IAAuC,CAAC,KAAKN,qBAA7C;YAAA;YAAA;YACF;YAAA;YAAA,EAAM,KAAKpH,UAAL,EAAN;;;YAAAxB;;YAEA2I,aAAa,CAAC,KAAKC,kBAAN,CAAb;YACA,KAAKA,kBAAL,GAA0BtH,MAAM,CAAC8H,WAAP,CACxB,KAAK5H,UADmB,EAExB2H,0BAA2B,GAAG,IAFN,CAA1B;;;;YAMF,IAAI,CAAC,CAACD,UAAD,IAAe,CAAC,KAAK7I,gBAAtB,KAA2C,KAAKuI,kBAApD,EAAwE;cACtED,aAAa,CAAC,KAAKC,kBAAN,CAAb;cACA,KAAKA,kBAAL,GAA0B7J,SAA1B;YACD;;;;;;;kCAED;;YACAO,OAAO,CAACC,KAAR,CAAc8J,QAAd;;;;;;;;;;;;EAEH,CAtBa;;EAwBNpC,+CAAR;IACU,aAAS,GAAK,KAAKlH,KAAL,CAAUyD,SAAxB;IAER;;IACA,IAAIA,SAAJ,EAAe;MACb;MACA,IAAI,CAAC,KAAKqF,sBAAV,EAAkC;QAChC,KAAKA,sBAAL,GAA8BvH,MAAM,CAAC8H,WAAP,CAC5B,KAAKhB,aADuB,EAE5B,KAAKzB,kBAFuB,CAA9B;MAID;IACF,CARD,MAQO,IAAI,KAAKkC,sBAAT,EAAiC;MACtCF,aAAa,CAAC,KAAKE,sBAAN,CAAb;MACA,KAAKA,sBAAL,GAA8B9J,SAA9B;IACD;EACF,CAhBO;;EAgIDkI,oCAAP;IACQ,SAiBF,KAAKlH,KAjBH;IAAA,IACJkC,eAAe,qBADX;IAAA,IAEJJ,QAAQ,cAFJ;IAAA,IAGJgB,OAAO,aAHH;IAAA,IAIJtD,KAAK,WAJD;IAAA,IAKJ0D,SAAS,eALL;IAAA,IAMJ/B,QAAQ,cANJ;IAAA,IAOJsD,WAAW,iBAPP;IAAA,IAQJhB,SAAS,eARL;IAAA,IASJ1B,aAAa,mBATT;IAAA,IAUJgC,UAAU,gBAVN;IAAA,IAWJgD,cAAc,oBAXV;IAAA,IAYJjH,QAAQ,cAZJ;IAAA,IAaJkE,cAAc,oBAbV;IAAA,IAcJzB,MAAM,YAdF;IAAA,IAeJxC,KAAK,WAfD;IAAA,IAgBJ4D,MAAM,YAhBF;IAkBA,SAA2D,KAAKvF,KAAhE;IAAA,IAAEmL,MAAM,YAAR;IAAA,IAAU5K,IAAI,UAAd;IAAA,IAAgBkJ,YAAY,kBAA5B;IAAA,IAA8B1H,KAAK,WAAnC;IAAA,IAAqCqJ,iBAAiB,uBAAtD;IACN,IAAMzB,OAAO,GAAG,CAAC/J,MAAM,CAACqG,KAAR,EAAerG,MAAM,CAACgF,WAAtB,EAAmCyG,OAAnC,CAA2ClH,MAA3C,KAAsD,CAAtE;IACA,IAAMI,eAAe,GAAGO,SAAS,KAAK,gBAAtC;IACA,IAAMwG,YAAY,GAAGhM,SAAS,CAAC6L,MAAD,CAA9B;IAEA,IAAII,MAAM,GAAGrN,oBAACO,MAAD,EAAO;MAACoK,MAAM,EAAE,KAAKA;IAAd,CAAP,CAAb;IACA,IAAI2C,IAAJ;;IAEA,IAAIjH,eAAJ,EAAqB;MACnBiH,IAAI,GAAGtN,+BAAIkD,KAAJ,CAAP;IACD;;IAED,IAAIuI,OAAJ,EAAa;MACX;MACA,IAAI,CAAC6B,IAAL,EAAW;QACTA,IAAI,GACFtN,oBAACM,IAAD,EAAK;UACHuE,QAAQ,EAAEA,QADP;UAEHoI,MAAM,EAAEG,YAFL;UAGHG,sBAAsB,EAAE,KAAKC,0BAH1B;UAIHjC,YAAY,EAAEA,YAJX;UAKHZ,MAAM,EAAE,KAAKA,MALV;UAMH9G,KAAK,EAAEA,KANJ;UAOHJ,KAAK,EAAEA,KAPJ;UAQHyJ,iBAAiB,EAAEA;QARhB,CAAL,CADF;MAYD;;MAEDG,MAAM,GACJrN,0CACEA,iCAAMsN,IAAN,CADF,EAEEtN,oBAACI,QAAD,EAAS;QACPqN,gBAAgB,EAAE,KAAKzJ,gBADhB;QAEPmD,SAAS,EAAEA,SAFJ;QAGP8F,MAAM,EAAEG,YAHD;QAIP3F,UAAU,EAAEA,UAJL;QAKPiG,WAAW,EAAE,KAAKC,eALX;QAMPC,eAAe,EAAE,KAAKC,mBANf;QAOPC,iBAAiB,EAAE,KAAKC,qBAPjB;QAQPrG,cAAc,EAAEA,cART;QASPiD,MAAM,EAAE,KAAKA;MATN,CAAT,CAFF,EAaE3K,oBAACE,OAAD,EAAQ;QACN0F,eAAe,EAAEA,eADX;QAENJ,QAAQ,EAAEA,QAFJ;QAGNgB,OAAO,EAAEA,OAHH;QAINwH,aAAa,EAAEvI,aAAa,IAAI,CAACD,QAJ3B;QAKNyH,MAAM,EAAEG,YALF;QAMNa,aAAa,EAAE,KAAKC,iBANd;QAONzD,cAAc,EAAEA,cAPV;QAQNvJ,SAAS,EAAE,KAAKA,SARV;QASNyJ,MAAM,EAAE,KAAKA,MATP;QAUNtD,MAAM,EAAEA;MAVF,CAAR,CAbF,CADF;IA4BD;;IAED,IAAIpB,MAAM,KAAKvE,MAAM,CAACiF,KAAtB,EAA6B;MAC3B0G,MAAM,GACJrN,oBAACK,YAAD,EAAa;QAACsK,MAAM,EAAE,KAAKA;MAAd,CAAb,EACGtI,IADH,QACWa,KADX,CADF;IAKD;;IAED,OACElD,oBAACQ,MAAD,EAAO;MAACqK,GAAG,EAAE,KAAKA,GAAX;MAAgBF,MAAM,EAAE,KAAKA;IAA7B,CAAP,EACGc,OAAO,IACNzL,oBAACS,MAAD,EAAO;MACL0H,WAAW,EAAEA,WADR;MAELgG,aAAa,EAAE,KAAKC,iBAFf;MAGLC,eAAe,EAAE,KAAKC,mBAHjB;MAIL9K,QAAQ,EAAEA,QAJL;MAKLmH,MAAM,EAAE,KAAKA;IALR,CAAP,CAFJ,EAUE3K,oBAACG,OAAD,EAAQ;MAACwK,MAAM,EAAE,KAAKA;IAAd,CAAR,EAA+B0C,MAA/B,CAVF,CADF;EAcD,CApGM,CAzyBT,CAuFE;;;EACOzC,gCAAe;IACpBhH,QAAQ,EAAE;MAAM;IAAS,CADL;IAEpBqE,oBAAoB,EAAE,KAFF;IAGpB5F,IAAI,EAAE,oBAHc;IAIpBkJ,YAAY,EAAE,KAJM;IAKpBuB,0BAA0B,EAAE,CALR;IAMpBtB,kBAAkB,EAAE;EANA,CAAf;EAszBT;AAAC,CA94BD,CAA+BxL,KAAK,CAACuO,aAArC;;AAg5BA,cAAc,SAAd;AAEA,eAAe3D,gBAAf;AAEA,SAASlJ,MAAT,EAAiBC,IAAjB,QAA6B,SAA7B","names":["React","memoize","Actions","Content","Controls","ErrorMessage","Info","Loader","Player","Slider","getDevices","getPlaybackState","next","pause","play","previous","seek","setDevice","setVolume","getMergedStyles","getLocale","getSpotifyURIType","isEqualArray","loadSpotifyPlayer","parseVolume","round","STATUS","TYPE","validateURI","__extends","props","_super","_this","artists","durationMs","id","image","name","uri","data","playOptions","context_uri","undefined","uris","ids","Array","isArray","every","d","console","error","some","warn","filter","length","createRef","position","track","state","_a","callback","token","progress","percentage","isExternalPlayer","Math","_b","updateState","progressMs","player","getCurrentState","track_window","current_track","duration_ms","type","PROGRESS","error_1","isActive","togglePlay","error_2","syncTimeout","window","setTimeout","syncDevice","previousTrack","error_3","nextTrack","error_4","deviceId","isUnsupported","autoPlay","persistDeviceSelection","currentDeviceId","sessionStorage","setItem","is_playing","error_5","status","isSaved","FAVORITE","message","isPlaybackError","isInitializationError","nextStatus","devices","disconnect","UNSUPPORTED","ERROR","errorType","isInitializing","paused","album","name_1","next_tracks","previous_tracks","isPlaying","getVolume","volume","_c","setAlbumImage","trackState","nextTracks","previousTracks","__assign","error_6","device_id","initializeDevices","READY","IDLE","magnifySliderOnHover","previousState","isMagnified","Spotify","getOAuthToken","addListener","handlePlayerStatus","handlePlayerStateChanges","handlePlayerErrors","connect","width","min","apply","__spreadArray","images","map","thumb","find","url","emptyTrack","Error","item","progress_ms","device","volume_percent","error_7","offset","init","needsUpdate","shouldInitialize","getPlayOptions","playerState","activateElement","error_8","Number","isFinite","toFixed","seekUpdateInterval","error_9","setState","playerPosition","initialVolume","styles","SpotifyWebPlayer","ref","current","getBoundingClientRect","top","innerHeight","INITIALIZING","onSpotifyWebPlaybackSDKReady","initializePlayer","previousProps","playProp","showSaveIcon","syncExternalDevice","isReady","changedURIs","canPlay","shouldPlay","DEVICE","toggleSyncInterval","updateSeekBar","TRACK","toggleProgressBar","PLAYER","hasNewToken","toggleOffset","setExternalDevice","clearInterval","playerSyncInterval","playerProgressInterval","clearTimeout","Object","savedDeviceId_1","getItem","shouldSync","syncExternalDeviceInterval","setInterval","error_10","locale","updateSavedStatus","indexOf","localeMerged","output","info","onFavoriteStatusChange","handleFavoriteStatusChange","isExternalDevice","onClickNext","handleClickNext","onClickPrevious","handleClickPrevious","onClickTogglePlay","handleClickTogglePlay","isDevicesOpen","onClickDevice","handleClickDevice","onChangeRange","handleChangeRange","onToggleMagnify","handleToggleMagnify","PureComponent"],"sources":["/Users/evankeith/Documents/FX119/unit-four/deliverables/capstone/scales-FE/scales-fe/node_modules/react-spotify-web-playback/src/index.tsx"],"sourcesContent":["/* eslint-disable camelcase */\nimport * as React from 'react';\nimport memoize from 'memoize-one';\n\nimport Actions from './components/Actions';\nimport Content from './components/Content';\nimport Controls from './components/Controls';\nimport ErrorMessage from './components/ErrorMessage';\nimport Info from './components/Info';\nimport Loader from './components/Loader';\nimport Player from './components/Player';\nimport Slider from './components/Slider';\nimport {\n  getDevices,\n  getPlaybackState,\n  next,\n  pause,\n  play,\n  previous,\n  seek,\n  setDevice,\n  setVolume,\n} from './spotify';\nimport { getMergedStyles } from './styles';\nimport {\n  PlayOptions,\n  Props,\n  SpotifyDevice,\n  SpotifyPlayerCallback,\n  SpotifyPlayerStatus,\n  State,\n  StylesOptions,\n  WebPlaybackAlbum,\n  WebPlaybackArtist,\n  WebPlaybackError,\n  WebPlaybackImage,\n  WebPlaybackPlayer,\n  WebPlaybackReady,\n  WebPlaybackState,\n} from './types';\nimport {\n  getLocale,\n  getSpotifyURIType,\n  isEqualArray,\n  loadSpotifyPlayer,\n  parseVolume,\n  round,\n  STATUS,\n  TYPE,\n  validateURI,\n} from './utils';\n\nclass SpotifyWebPlayer extends React.PureComponent<Props, State> {\n  private isActive = false;\n  private emptyTrack = {\n    artists: [] as WebPlaybackArtist[],\n    durationMs: 0,\n    id: '',\n    image: '',\n    name: '',\n    uri: '',\n  };\n\n  private getPlayOptions = memoize((data): PlayOptions => {\n    const playOptions: PlayOptions = {\n      context_uri: undefined,\n      uris: undefined,\n    };\n\n    /* istanbul ignore else */\n    if (data) {\n      const ids = Array.isArray(data) ? data : [data];\n\n      if (!ids.every(d => validateURI(d))) {\n        // eslint-disable-next-line no-console\n        console.error('Invalid URI');\n\n        return playOptions;\n      }\n\n      if (ids.some(d => getSpotifyURIType(d) === 'track')) {\n        if (!ids.every(d => getSpotifyURIType(d) === 'track')) {\n          // eslint-disable-next-line no-console\n          console.warn(\"You can't mix tracks URIs with other types\");\n        }\n\n        playOptions.uris = ids.filter(d => validateURI(d) && getSpotifyURIType(d) === 'track');\n      } else {\n        if (ids.length > 1) {\n          // eslint-disable-next-line no-console\n          console.warn(\"Albums, Artists, Playlists and Podcasts can't have multiple URIs\");\n        }\n\n        // eslint-disable-next-line prefer-destructuring\n        playOptions.context_uri = ids[0];\n      }\n    }\n\n    return playOptions;\n  });\n\n  private hasNewToken = false;\n  private player?: WebPlaybackPlayer;\n  private playerProgressInterval?: number;\n  private playerSyncInterval?: number;\n  private ref = React.createRef<HTMLDivElement>();\n  private seekUpdateInterval = 100;\n  private readonly styles: StylesOptions;\n  private syncTimeout?: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      currentDeviceId: '',\n      deviceId: '',\n      devices: [],\n      error: '',\n      errorType: '',\n      isActive: false,\n      isInitializing: false,\n      isMagnified: false,\n      isPlaying: false,\n      isSaved: false,\n      isUnsupported: false,\n      needsUpdate: false,\n      nextTracks: [],\n      playerPosition: 'bottom',\n      position: 0,\n      previousTracks: [],\n      progressMs: 0,\n      status: STATUS.IDLE,\n      track: this.emptyTrack,\n      volume: parseVolume(props.initialVolume) || 1,\n    };\n\n    this.styles = getMergedStyles(props.styles);\n  }\n\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    callback: () => undefined,\n    magnifySliderOnHover: false,\n    name: 'Spotify Web Player',\n    showSaveIcon: false,\n    syncExternalDeviceInterval: 5,\n    syncExternalDevice: false,\n  };\n\n  public async componentDidMount() {\n    this.isActive = true;\n    const { top = 0 } = this.ref.current?.getBoundingClientRect() || {};\n\n    this.updateState({\n      playerPosition: top > window.innerHeight / 2 ? 'bottom' : 'top',\n      status: STATUS.INITIALIZING,\n    });\n\n    if (!window.onSpotifyWebPlaybackSDKReady) {\n      window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    } else {\n      this.initializePlayer();\n    }\n\n    await loadSpotifyPlayer();\n  }\n\n  public async componentDidUpdate(previousProps: Props, previousState: State) {\n    const { currentDeviceId, deviceId, error, isInitializing, isPlaying, status, track } =\n      this.state;\n    const {\n      autoPlay,\n      callback,\n      offset,\n      play: playProp,\n      showSaveIcon,\n      syncExternalDevice,\n      token,\n      uris,\n    } = this.props;\n    const isReady = previousState.status !== STATUS.READY && status === STATUS.READY;\n    const changedURIs = Array.isArray(uris)\n      ? !isEqualArray(previousProps.uris, uris)\n      : previousProps.uris !== uris;\n    const playOptions = this.getPlayOptions(uris);\n\n    const canPlay = !!currentDeviceId && !!(playOptions.context_uri || playOptions.uris);\n    const shouldPlay = (changedURIs && isPlaying) || !!(isReady && (autoPlay || playProp));\n\n    if (canPlay && shouldPlay) {\n      await play(token, { deviceId: currentDeviceId, offset, ...playOptions });\n\n      /* istanbul ignore else */\n      if (!isPlaying) {\n        this.updateState({ isPlaying: true });\n      }\n\n      if (this.isExternalPlayer) {\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 600);\n      }\n    } else if (changedURIs && !isPlaying) {\n      this.updateState({ needsUpdate: true });\n    }\n\n    if (previousState.status !== status) {\n      callback!({\n        ...this.state,\n        type: TYPE.STATUS,\n      });\n    }\n\n    if (previousState.currentDeviceId !== currentDeviceId && currentDeviceId) {\n      if (!isReady) {\n        callback!({\n          ...this.state,\n          type: TYPE.DEVICE,\n        });\n      }\n\n      await this.toggleSyncInterval(this.isExternalPlayer);\n      await this.updateSeekBar();\n    }\n\n    if (previousState.track.id !== track.id && track.id) {\n      callback!({\n        ...this.state,\n        type: TYPE.TRACK,\n      });\n\n      if (showSaveIcon) {\n        this.updateState({ isSaved: false });\n      }\n    }\n\n    if (previousState.isPlaying !== isPlaying) {\n      this.toggleProgressBar();\n      await this.toggleSyncInterval(this.isExternalPlayer);\n\n      callback!({\n        ...this.state,\n        type: TYPE.PLAYER,\n      });\n    }\n\n    if (token && previousProps.token !== token) {\n      this.hasNewToken = true;\n\n      if (!isInitializing) {\n        this.initializePlayer();\n      } else {\n        this.hasNewToken = true;\n      }\n    }\n\n    if (previousProps.play !== playProp && playProp !== isPlaying) {\n      await this.togglePlay(!track.id);\n    }\n\n    if (previousProps.offset !== offset) {\n      await this.toggleOffset();\n    }\n\n    if (previousState.isInitializing && !isInitializing) {\n      if (error === 'authentication_error' && this.hasNewToken) {\n        this.hasNewToken = false;\n        this.initializePlayer();\n      }\n\n      if (syncExternalDevice && !uris) {\n        const player: SpotifyPlayerStatus = await getPlaybackState(token);\n\n        /* istanbul ignore else */\n        if (player && player.is_playing && player.device.id !== deviceId) {\n          this.setExternalDevice(player.device.id);\n        }\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    this.isActive = false;\n\n    /* istanbul ignore else */\n    if (this.player) {\n      this.player.disconnect();\n    }\n\n    clearInterval(this.playerSyncInterval);\n    clearInterval(this.playerProgressInterval);\n    clearTimeout(this.syncTimeout);\n  }\n\n  private get isExternalPlayer(): boolean {\n    const { currentDeviceId, deviceId, status } = this.state;\n\n    return (currentDeviceId && currentDeviceId !== deviceId) || status === STATUS.UNSUPPORTED;\n  }\n\n  private handleChangeRange = async (position: number) => {\n    const { track } = this.state;\n    const { callback, token } = this.props;\n    let progress = 0;\n\n    try {\n      const percentage = position / 100;\n\n      if (this.isExternalPlayer) {\n        progress = Math.round(track.durationMs * percentage);\n        await seek(token, progress);\n\n        this.updateState({\n          position,\n          progressMs: progress,\n        });\n      } else if (this.player) {\n        const state = (await this.player.getCurrentState()) as WebPlaybackState;\n\n        if (state) {\n          progress = Math.round(state.track_window.current_track.duration_ms * percentage);\n          await this.player.seek(progress);\n\n          this.updateState({\n            position,\n            progressMs: progress,\n          });\n        } else {\n          this.updateState({ position: 0 });\n        }\n      }\n\n      if (callback) {\n        callback({\n          ...this.state,\n          type: TYPE.PROGRESS,\n        });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickTogglePlay = async () => {\n    const { isActive } = this.state;\n\n    try {\n      await this.togglePlay(!this.isExternalPlayer && !isActive);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickPrevious = async () => {\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        const { token } = this.props;\n\n        await previous(token);\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        await this.player.previousTrack();\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickNext = async () => {\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        const { token } = this.props;\n\n        await next(token);\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        await this.player.nextTrack();\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickDevice = async (deviceId: string) => {\n    const { isUnsupported } = this.state;\n    const { autoPlay, persistDeviceSelection, token } = this.props;\n\n    this.updateState({ currentDeviceId: deviceId });\n\n    try {\n      await setDevice(token, deviceId);\n\n      /* istanbul ignore else */\n      if (persistDeviceSelection) {\n        sessionStorage.setItem('rswpDeviceId', deviceId);\n      }\n\n      /* istanbul ignore else */\n      if (isUnsupported) {\n        await this.syncDevice();\n\n        const player: SpotifyPlayerStatus = await getPlaybackState(token);\n\n        if (player && !player.is_playing && autoPlay) {\n          await this.togglePlay(true);\n        }\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleFavoriteStatusChange = (status: boolean) => {\n    const { isSaved } = this.state;\n    const { callback } = this.props;\n\n    this.updateState({ isSaved: status });\n\n    /* istanbul ignore else */\n    if (isSaved !== status) {\n      callback!({\n        ...this.state,\n        isSaved: status,\n        type: TYPE.FAVORITE,\n      });\n    }\n  };\n\n  private handlePlayerErrors = async (type: string, message: string) => {\n    const { status } = this.state;\n    const isPlaybackError = type === 'playback_error';\n    const isInitializationError = type === 'initialization_error';\n    let nextStatus = status;\n    let devices: SpotifyDevice[] = [];\n\n    if (this.player && !isPlaybackError) {\n      await this.player.disconnect();\n    }\n\n    if (isInitializationError) {\n      nextStatus = STATUS.UNSUPPORTED;\n\n      const { token } = this.props;\n\n      ({ devices = [] } = await getDevices(token));\n    }\n\n    if (!isInitializationError && !isPlaybackError) {\n      nextStatus = STATUS.ERROR;\n    }\n\n    this.updateState({\n      devices,\n      error: message,\n      errorType: type,\n      isInitializing: false,\n      isUnsupported: isInitializationError,\n      status: nextStatus,\n    });\n  };\n\n  private handlePlayerStateChanges = async (state: WebPlaybackState | null) => {\n    try {\n      /* istanbul ignore else */\n      if (state) {\n        const {\n          paused,\n          position,\n          track_window: {\n            current_track: { album, artists, duration_ms, id, name, uri },\n            next_tracks,\n            previous_tracks,\n          },\n        } = state;\n\n        const isPlaying = !paused;\n        const volume = await this.player!.getVolume();\n        const track = {\n          artists,\n          durationMs: duration_ms,\n          id,\n          image: this.setAlbumImage(album),\n          name,\n          uri,\n        };\n        let trackState;\n\n        if (position === 0) {\n          trackState = {\n            nextTracks: next_tracks,\n            position: 0,\n            previousTracks: previous_tracks,\n            track,\n          };\n        }\n\n        this.updateState({\n          error: '',\n          errorType: '',\n          isActive: true,\n          isPlaying,\n          progressMs: position,\n          volume: round(volume),\n          ...trackState,\n        });\n      } else if (this.isExternalPlayer) {\n        await this.syncDevice();\n      } else {\n        this.updateState({\n          isActive: false,\n          isPlaying: false,\n          nextTracks: [],\n          position: 0,\n          previousTracks: [],\n          track: {\n            artists: '',\n            durationMs: 0,\n            id: '',\n            image: '',\n            name: '',\n            uri: '',\n          },\n        });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handlePlayerStatus = async ({ device_id }: WebPlaybackReady) => {\n    const { currentDeviceId, devices } = await this.initializeDevices(device_id);\n\n    this.updateState({\n      currentDeviceId,\n      deviceId: device_id,\n      devices,\n      isInitializing: false,\n      status: device_id ? STATUS.READY : STATUS.IDLE,\n    });\n  };\n\n  private handleToggleMagnify = () => {\n    const { magnifySliderOnHover } = this.props;\n\n    if (magnifySliderOnHover) {\n      this.updateState((previousState: State) => {\n        return { isMagnified: !previousState.isMagnified };\n      });\n    }\n  };\n\n  private async initializeDevices(id: string) {\n    const { persistDeviceSelection, token } = this.props;\n    const { devices } = await getDevices(token);\n    let currentDeviceId = id;\n\n    if (persistDeviceSelection) {\n      const savedDeviceId = sessionStorage.getItem('rswpDeviceId');\n\n      /* istanbul ignore else */\n      if (!savedDeviceId || !devices.some((d: SpotifyDevice) => d.id === savedDeviceId)) {\n        sessionStorage.setItem('rswpDeviceId', currentDeviceId);\n      } else {\n        currentDeviceId = savedDeviceId;\n      }\n    }\n\n    return { currentDeviceId, devices };\n  }\n\n  private initializePlayer = () => {\n    const { volume } = this.state;\n    const { name, token } = this.props;\n\n    this.updateState({ isInitializing: true });\n\n    // @ts-ignore\n    this.player = new window.Spotify.Player({\n      getOAuthToken: (callback: SpotifyPlayerCallback) => {\n        callback(token);\n      },\n      name,\n      volume,\n    }) as WebPlaybackPlayer;\n\n    this.player.addListener('ready', this.handlePlayerStatus);\n    this.player.addListener('not_ready', this.handlePlayerStatus);\n    this.player.addListener('player_state_changed', this.handlePlayerStateChanges);\n    this.player.addListener('initialization_error', (error: WebPlaybackError) =>\n      this.handlePlayerErrors('initialization_error', error.message),\n    );\n    this.player.addListener('authentication_error', (error: WebPlaybackError) =>\n      this.handlePlayerErrors('authentication_error', error.message),\n    );\n    this.player.addListener('account_error', (error: WebPlaybackError) =>\n      this.handlePlayerErrors('account_error', error.message),\n    );\n    this.player.addListener('playback_error', (error: WebPlaybackError) =>\n      this.handlePlayerErrors('playback_error', error.message),\n    );\n\n    this.player.connect();\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  private setAlbumImage = (album: WebPlaybackAlbum): string => {\n    const width = Math.min(...album.images.map(d => d.width));\n    const thumb: WebPlaybackImage =\n      album.images.find(d => d.width === width) || ({} as WebPlaybackImage);\n\n    return thumb.url;\n  };\n\n  private setExternalDevice = (id: string) => {\n    this.updateState({ currentDeviceId: id, isPlaying: true });\n  };\n\n  private setVolume = async (volume: number) => {\n    const { token } = this.props;\n\n    /* istanbul ignore else */\n    if (this.isExternalPlayer) {\n      await setVolume(token, Math.round(volume * 100));\n      await this.syncDevice();\n    } else if (this.player) {\n      await this.player.setVolume(volume);\n    }\n\n    this.updateState({ volume });\n  };\n\n  private syncDevice = async () => {\n    if (!this.isActive) {\n      return;\n    }\n\n    const { deviceId } = this.state;\n    const { token } = this.props;\n\n    try {\n      const player: SpotifyPlayerStatus = await getPlaybackState(token);\n      let track = this.emptyTrack;\n\n      if (!player) {\n        throw new Error('No player');\n      }\n\n      /* istanbul ignore else */\n      if (player.item) {\n        track = {\n          artists: player.item.artists,\n          durationMs: player.item.duration_ms,\n          id: player.item.id,\n          image: this.setAlbumImage(player.item.album),\n          name: player.item.name,\n          uri: player.item.uri,\n        };\n      }\n\n      this.updateState({\n        error: '',\n        errorType: '',\n        isActive: true,\n        isPlaying: player.is_playing,\n        nextTracks: [],\n        previousTracks: [],\n        progressMs: player.item ? player.progress_ms : 0,\n        status: STATUS.READY,\n        track,\n        volume: parseVolume(player.device.volume_percent),\n      });\n    } catch (error: any) {\n      const state = {\n        isActive: false,\n        isPlaying: false,\n        position: 0,\n        track: this.emptyTrack,\n      };\n\n      if (deviceId) {\n        this.updateState({\n          currentDeviceId: deviceId,\n          ...state,\n        });\n\n        return;\n      }\n\n      this.updateState({\n        error: error.message,\n        errorType: 'player_status',\n        status: STATUS.ERROR,\n        ...state,\n      });\n    }\n  };\n\n  private async toggleSyncInterval(shouldSync: boolean) {\n    const { syncExternalDeviceInterval } = this.props;\n\n    try {\n      if (this.isExternalPlayer && shouldSync && !this.playerSyncInterval) {\n        await this.syncDevice();\n\n        clearInterval(this.playerSyncInterval);\n        this.playerSyncInterval = window.setInterval(\n          this.syncDevice,\n          syncExternalDeviceInterval! * 1000,\n        );\n      }\n\n      if ((!shouldSync || !this.isExternalPlayer) && this.playerSyncInterval) {\n        clearInterval(this.playerSyncInterval);\n        this.playerSyncInterval = undefined;\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n\n  private toggleProgressBar() {\n    const { isPlaying } = this.state;\n\n    /* istanbul ignore else */\n    if (isPlaying) {\n      /* istanbul ignore else */\n      if (!this.playerProgressInterval) {\n        this.playerProgressInterval = window.setInterval(\n          this.updateSeekBar,\n          this.seekUpdateInterval,\n        );\n      }\n    } else if (this.playerProgressInterval) {\n      clearInterval(this.playerProgressInterval);\n      this.playerProgressInterval = undefined;\n    }\n  }\n\n  private toggleOffset = async () => {\n    const { currentDeviceId, isPlaying } = this.state;\n    const { offset, token, uris } = this.props;\n\n    if (isPlaying && typeof offset === 'number' && Array.isArray(uris)) {\n      await play(token, { deviceId: currentDeviceId, offset, uris });\n    }\n  };\n\n  private togglePlay = async (init = false) => {\n    const { currentDeviceId, isPlaying, needsUpdate } = this.state;\n    const { offset, token, uris } = this.props;\n    const shouldInitialize = init || needsUpdate;\n    const playOptions = this.getPlayOptions(uris);\n\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        if (!isPlaying) {\n          await play(token, {\n            deviceId: currentDeviceId,\n            offset,\n            ...(shouldInitialize ? playOptions : undefined),\n          });\n        } else {\n          await pause(token);\n\n          this.updateState({ isPlaying: false });\n        }\n\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        const playerState = await this.player.getCurrentState();\n\n        this.player.activateElement();\n\n        // eslint-disable-next-line unicorn/prefer-ternary\n        if (\n          (!playerState && !!(playOptions.context_uri || playOptions.uris)) ||\n          (shouldInitialize && playerState && playerState.paused)\n        ) {\n          await play(token, {\n            deviceId: currentDeviceId,\n            offset,\n            ...(shouldInitialize ? playOptions : undefined),\n          });\n        } else {\n          await this.player.togglePlay();\n        }\n      }\n\n      if (needsUpdate) {\n        this.updateState({ needsUpdate: false });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private updateSeekBar = async () => {\n    if (!this.isActive) {\n      return;\n    }\n\n    const { progressMs, track } = this.state;\n\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        let position = progressMs / track.durationMs;\n\n        position = Number(((Number.isFinite(position) ? position : 0) * 100).toFixed(1));\n\n        this.updateState({\n          position,\n          progressMs: progressMs + this.seekUpdateInterval,\n        });\n      } else if (this.player) {\n        const state = (await this.player.getCurrentState()) as WebPlaybackState;\n\n        /* istanbul ignore else */\n        if (state) {\n          const progress = state.position;\n          const position = Number(\n            ((progress / state.track_window.current_track.duration_ms) * 100).toFixed(1),\n          );\n\n          this.updateState({\n            position,\n            progressMs: progress + this.seekUpdateInterval,\n          });\n        }\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private updateState = (state = {}) => {\n    if (!this.isActive) {\n      return;\n    }\n\n    this.setState(state);\n  };\n\n  public render() {\n    const {\n      currentDeviceId,\n      deviceId,\n      devices,\n      error,\n      errorType,\n      isActive,\n      isMagnified,\n      isPlaying,\n      isUnsupported,\n      nextTracks,\n      playerPosition,\n      position,\n      previousTracks,\n      status,\n      track,\n      volume,\n    } = this.state;\n    const { locale, name, showSaveIcon, token, updateSavedStatus } = this.props;\n    const isReady = [STATUS.READY, STATUS.UNSUPPORTED].indexOf(status) >= 0;\n    const isPlaybackError = errorType === 'playback_error';\n    const localeMerged = getLocale(locale);\n\n    let output = <Loader styles={this.styles!} />;\n    let info;\n\n    if (isPlaybackError) {\n      info = <p>{error}</p>;\n    }\n\n    if (isReady) {\n      /* istanbul ignore else */\n      if (!info) {\n        info = (\n          <Info\n            isActive={isActive}\n            locale={localeMerged}\n            onFavoriteStatusChange={this.handleFavoriteStatusChange}\n            showSaveIcon={showSaveIcon!}\n            styles={this.styles}\n            token={token}\n            track={track}\n            updateSavedStatus={updateSavedStatus}\n          />\n        );\n      }\n\n      output = (\n        <>\n          <div>{info}</div>\n          <Controls\n            isExternalDevice={this.isExternalPlayer}\n            isPlaying={isPlaying}\n            locale={localeMerged}\n            nextTracks={nextTracks}\n            onClickNext={this.handleClickNext}\n            onClickPrevious={this.handleClickPrevious}\n            onClickTogglePlay={this.handleClickTogglePlay}\n            previousTracks={previousTracks}\n            styles={this.styles}\n          />\n          <Actions\n            currentDeviceId={currentDeviceId}\n            deviceId={deviceId}\n            devices={devices}\n            isDevicesOpen={isUnsupported && !deviceId}\n            locale={localeMerged}\n            onClickDevice={this.handleClickDevice}\n            playerPosition={playerPosition}\n            setVolume={this.setVolume}\n            styles={this.styles}\n            volume={volume}\n          />\n        </>\n      );\n    }\n\n    if (status === STATUS.ERROR) {\n      output = (\n        <ErrorMessage styles={this.styles}>\n          {name}: {error}\n        </ErrorMessage>\n      );\n    }\n\n    return (\n      <Player ref={this.ref} styles={this.styles}>\n        {isReady && (\n          <Slider\n            isMagnified={isMagnified}\n            onChangeRange={this.handleChangeRange}\n            onToggleMagnify={this.handleToggleMagnify}\n            position={position}\n            styles={this.styles!}\n          />\n        )}\n        <Content styles={this.styles}>{output}</Content>\n      </Player>\n    );\n  }\n}\n\nexport * from './types';\n\nexport default SpotifyWebPlayer;\n\nexport { STATUS, TYPE } from './utils';\n"]},"metadata":{},"sourceType":"module"}